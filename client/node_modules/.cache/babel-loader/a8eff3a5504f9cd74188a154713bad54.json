{"ast":null,"code":"import _objectSpread from \"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ADD_ARTICLE, GET_ARTICLE, DELETE_ARTICLE } from \"./types\";\nimport AxiosAPI from \"../components/AxiosAPI\";\nimport history from \"./history\";\nexport const createArticle = formValues => dispatch => {\n  const data = new FormData();\n\n  if (typeof formValues.picture !== \"string\" && formValues.picture !== null) {\n    data.append(\"picture\", formValues.picture[0]);\n  }\n\n  const response = AxiosAPI.post(\"/api/articles/add\", _objectSpread({}, formValues));\n  dispatch({\n    type: ADD_ARTICLE,\n    payload: response.data\n  });\n  history.push(\"/\");\n};\nexport const deleteArticleSuccess = id => {\n  return {\n    type: DELETE_ARTICLE,\n    payload: {\n      id\n    }\n  };\n};\nexport const deleteArticle = id => {\n  return dispatch => {\n    return AxiosAPI.get(\"/api/articles/\" + id).then(response => {\n      dispatch(deleteArticleSuccess(response.data));\n    }).catch(error => {\n      throw error;\n    });\n  };\n};\nexport const getArticles = articles => {\n  return {\n    type: GET_ARTICLE,\n    articles\n  };\n};\nexport const getAllArticles = () => {\n  return dispatch => {\n    return AxiosAPI.get(\"/api/articles\").then(response => {\n      dispatch(getArticles(response.data));\n    }).catch(error => {\n      throw error;\n    });\n  };\n};","map":{"version":3,"sources":["/Users/Lawrence/Desktop/mind-of-a-millennial/client/src/actions/articleActions.js"],"names":["ADD_ARTICLE","GET_ARTICLE","DELETE_ARTICLE","AxiosAPI","history","createArticle","formValues","dispatch","data","FormData","picture","append","response","post","type","payload","push","deleteArticleSuccess","id","deleteArticle","get","then","catch","error","getArticles","articles","getAllArticles"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,WAAtB,EAAmCC,cAAnC,QAAyD,SAAzD;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,MAAMC,aAAa,GAAGC,UAAU,IAAIC,QAAQ,IAAI;AACrD,QAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;;AAEA,MAAI,OAAOH,UAAU,CAACI,OAAlB,KAA8B,QAA9B,IAA0CJ,UAAU,CAACI,OAAX,KAAuB,IAArE,EAA2E;AACzEF,IAAAA,IAAI,CAACG,MAAL,CAAY,SAAZ,EAAuBL,UAAU,CAACI,OAAX,CAAmB,CAAnB,CAAvB;AACD;;AACD,QAAME,QAAQ,GAAGT,QAAQ,CAACU,IAAT,CAAc,mBAAd,oBAAwCP,UAAxC,EAAjB;AAEAC,EAAAA,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAEd,WAAR;AAAqBe,IAAAA,OAAO,EAAEH,QAAQ,CAACJ;AAAvC,GAAD,CAAR;AACAJ,EAAAA,OAAO,CAACY,IAAR,CAAa,GAAb;AACD,CAVM;AAYP,OAAO,MAAMC,oBAAoB,GAAGC,EAAE,IAAI;AACxC,SAAO;AACLJ,IAAAA,IAAI,EAAEZ,cADD;AAELa,IAAAA,OAAO,EAAE;AACPG,MAAAA;AADO;AAFJ,GAAP;AAMD,CAPM;AASP,OAAO,MAAMC,aAAa,GAAGD,EAAE,IAAI;AACjC,SAAOX,QAAQ,IAAI;AACjB,WAAOJ,QAAQ,CAACiB,GAAT,CAAa,mBAAmBF,EAAhC,EACJG,IADI,CACCT,QAAQ,IAAI;AAChBL,MAAAA,QAAQ,CAACU,oBAAoB,CAACL,QAAQ,CAACJ,IAAV,CAArB,CAAR;AACD,KAHI,EAIJc,KAJI,CAIEC,KAAK,IAAI;AACd,YAAMA,KAAN;AACD,KANI,CAAP;AAOD,GARD;AASD,CAVM;AAYP,OAAO,MAAMC,WAAW,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLX,IAAAA,IAAI,EAAEb,WADD;AAELwB,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,SAAOnB,QAAQ,IAAI;AACjB,WAAOJ,QAAQ,CAACiB,GAAT,CAAa,eAAb,EACJC,IADI,CACCT,QAAQ,IAAI;AAChBL,MAAAA,QAAQ,CAACiB,WAAW,CAACZ,QAAQ,CAACJ,IAAV,CAAZ,CAAR;AACD,KAHI,EAIJc,KAJI,CAIEC,KAAK,IAAI;AACd,YAAMA,KAAN;AACD,KANI,CAAP;AAOD,GARD;AASD,CAVM","sourcesContent":["import { ADD_ARTICLE, GET_ARTICLE, DELETE_ARTICLE } from \"./types\";\nimport AxiosAPI from \"../components/AxiosAPI\";\nimport history from \"./history\";\n\nexport const createArticle = formValues => dispatch => {\n  const data = new FormData();\n\n  if (typeof formValues.picture !== \"string\" && formValues.picture !== null) {\n    data.append(\"picture\", formValues.picture[0]);\n  }\n  const response = AxiosAPI.post(\"/api/articles/add\", { ...formValues });\n\n  dispatch({ type: ADD_ARTICLE, payload: response.data });\n  history.push(\"/\");\n};\n\nexport const deleteArticleSuccess = id => {\n  return {\n    type: DELETE_ARTICLE,\n    payload: {\n      id\n    }\n  };\n};\n\nexport const deleteArticle = id => {\n  return dispatch => {\n    return AxiosAPI.get(\"/api/articles/\" + id)\n      .then(response => {\n        dispatch(deleteArticleSuccess(response.data));\n      })\n      .catch(error => {\n        throw error;\n      });\n  };\n};\n\nexport const getArticles = articles => {\n  return {\n    type: GET_ARTICLE,\n    articles\n  };\n};\n\nexport const getAllArticles = () => {\n  return dispatch => {\n    return AxiosAPI.get(\"/api/articles\")\n      .then(response => {\n        dispatch(getArticles(response.data));\n      })\n      .catch(error => {\n        throw error;\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}