{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require(\"events\"),\n    EventEmitter = _require.EventEmitter;\n\nmodule.exports =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(VirtualConsole, _EventEmitter);\n\n  function VirtualConsole() {\n    var _this;\n\n    _classCallCheck(this, VirtualConsole);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VirtualConsole).call(this));\n\n    _this.on(\"error\", function () {// If \"error\" event has no listeners,\n      // EventEmitter throws an exception\n    });\n\n    return _this;\n  }\n\n  _createClass(VirtualConsole, [{\n    key: \"sendTo\",\n    value: function sendTo(anyConsole, options) {\n      var _this2 = this;\n\n      if (options === undefined) {\n        options = {};\n      }\n\n      var _loop = function _loop() {\n        var method = _Object$keys[_i];\n\n        if (typeof anyConsole[method] === \"function\") {\n          var onMethodCall = function onMethodCall() {\n            anyConsole[method].apply(anyConsole, arguments);\n          };\n\n          _this2.on(method, onMethodCall);\n        }\n      };\n\n      for (var _i = 0, _Object$keys = Object.keys(anyConsole); _i < _Object$keys.length; _i++) {\n        _loop();\n      }\n\n      if (!options.omitJSDOMErrors) {\n        this.on(\"jsdomError\", function (e) {\n          return anyConsole.error(e.stack, e.detail);\n        });\n      }\n\n      return this;\n    }\n  }]);\n\n  return VirtualConsole;\n}(EventEmitter);","map":null,"metadata":{},"sourceType":"script"}