{"ast":null,"code":"var _jsxFileName = \"/Users/Lawrence/Desktop/mind-of-a-millennial/client/src/components/auth/ChangePassword.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport propTypes from \"prop-types\";\nimport { resetPassword } from \"../../actions/authActions\";\n\nclass ChangePassword extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const resetData = {\n        password: this.state.passwordChange,\n        newPassword: this.state.newPasswordChange,\n        confirmNewPassword: this.state.confirmNewPasswordChange\n      };\n      this.props.resetPassword(resetData);\n    };\n\n    this.state = {\n      passwordChange: \"\",\n      newPasswordChange: \"\",\n      confirmNewPasswordChange: \"\",\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const errors = this.props.errors;\n    console.log(errors);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Change Your Password\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form__label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Current Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Current Password\",\n      value: this.state.passwordChange,\n      onChange: this.onChange,\n      error: errors.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"New Password\",\n      value: this.state.newPasswordChange,\n      onChange: this.onChange,\n      error: errors.newpassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirm New Password\",\n      value: this.state.confirmNewPasswordChange,\n      onChange: this.onChange,\n      error: errors.confrimNewPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Change Password\",\n      className: \"submit-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })));\n  }\n\n}\n\nChangePassword.propTypes = {\n  resetPassword: propTypes.func.isRequired,\n  profile: propTypes.object.isRequired,\n  auth: propTypes.object.isRequired,\n  errors: propTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  resetPassword\n})(ChangePassword);","map":{"version":3,"sources":["/Users/Lawrence/Desktop/mind-of-a-millennial/client/src/components/auth/ChangePassword.js"],"names":["React","connect","propTypes","resetPassword","ChangePassword","Component","constructor","props","onChange","e","setState","target","name","value","onSubmit","preventDefault","resetData","password","state","passwordChange","newPassword","newPasswordChange","confirmNewPassword","confirmNewPasswordChange","errors","componentWillReceiveProps","nextProps","render","console","log","newpassword","confrimNewPassword","func","isRequired","profile","object","auth","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport propTypes from \"prop-types\";\nimport { resetPassword } from \"../../actions/authActions\";\n\nclass ChangePassword extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      passwordChange: \"\",\n      newPasswordChange: \"\",\n      confirmNewPasswordChange: \"\",\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const resetData = {\n      password: this.state.passwordChange,\n      newPassword: this.state.newPasswordChange,\n      confirmNewPassword: this.state.confirmNewPasswordChange\n    };\n    this.props.resetPassword(resetData);\n  };\n\n  render() {\n    const { errors } = this.props;\n    console.log(errors);\n    return (\n      <React.Fragment>\n        <h3>Change Your Password</h3>\n        <form onSubmit={this.onSubmit}>\n          <label className=\"form__label\">Current Password</label>\n          <input\n            type=\"password\"\n            placeholder=\"Current Password\"\n            value={this.state.passwordChange}\n            onChange={this.onChange}\n            error={errors.password}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"New Password\"\n            value={this.state.newPasswordChange}\n            onChange={this.onChange}\n            error={errors.newpassword}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Confirm New Password\"\n            value={this.state.confirmNewPasswordChange}\n            onChange={this.onChange}\n            error={errors.confrimNewPassword}\n          />\n          <input type=\"submit\" value=\"Change Password\" className=\"submit-btn\" />\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nChangePassword.propTypes = {\n  resetPassword: propTypes.func.isRequired,\n  profile: propTypes.object.isRequired,\n  auth: propTypes.object.isRequired,\n  errors: propTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { resetPassword }\n)(ChangePassword);\n"]},"metadata":{},"sourceType":"module"}