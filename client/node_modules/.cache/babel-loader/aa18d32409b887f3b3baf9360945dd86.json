{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StringToTypeMap = undefined;\n\nvar _model = require('../model');\n\nvar _constants = require('./constants');\n/*\nThis is a key value pair where the key is the string that is input while typing.\nWhile typing in an empty block, if the entered text matches any of the keys in\nthis dictionary, that particular block's type will be changed to the value\nassociated with that key.\n*/\n\n\nvar StringToTypeMap = exports.StringToTypeMap = {\n  '--': _constants.Block.BLOCKQUOTE + ':' + _constants.Block.BLOCKQUOTE_CAPTION + ':' + _constants.Block.CAPTION,\n  '> ': _constants.Block.BLOCKQUOTE,\n  '*.': _constants.Block.UL,\n  '* ': _constants.Block.UL,\n  '- ': _constants.Block.UL,\n  '1.': _constants.Block.OL,\n  '# ': _constants.Block.H1,\n  '##': _constants.Block.H2,\n  '==': _constants.Block.UNSTYLED,\n  '[]': _constants.Block.TODO\n};\n/*\nThis function is called before text is input in a block in `draft-js`. It checks\nwhether the input string (first 2 cahracters only) is present in the `StringToTypeMap`\nmapping or not. If present, it converts the current block's type and called the `editor`'s\n`onChange` function. Otherwise, does nothing. By defualt, the above key-value mapping\nis passed. In custom implementation, users can pass their own mapping or extend\nthe current one.\n*/\n\nvar beforeInput = function beforeInput(editorState, inputString, onChange) {\n  var mapping = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : StringToTypeMap;\n  var selection = editorState.getSelection();\n  var block = (0, _model.getCurrentBlock)(editorState);\n  var blockType = block.getType();\n\n  if (blockType.indexOf(_constants.Block.ATOMIC) === 0) {\n    return _constants.NOT_HANDLED;\n  }\n\n  var blockLength = block.getLength();\n\n  if (selection.getAnchorOffset() > 1 || blockLength > 1) {\n    return _constants.NOT_HANDLED;\n  }\n\n  var blockTo = mapping[block.getText()[0] + inputString];\n\n  if (!blockTo) {\n    return _constants.NOT_HANDLED;\n  }\n\n  var finalType = blockTo.split(':');\n\n  if (finalType.length < 1 || finalType.length > 3) {\n    return _constants.NOT_HANDLED;\n  }\n\n  var fType = finalType[0];\n\n  if (finalType.length === 1) {\n    if (blockType === finalType[0]) {\n      return _constants.NOT_HANDLED;\n    }\n  } else if (finalType.length === 2) {\n    if (blockType === finalType[1]) {\n      return _constants.NOT_HANDLED;\n    }\n\n    if (blockType === finalType[0]) {\n      fType = finalType[1];\n    }\n  } else if (finalType.length === 3) {\n    if (blockType === finalType[2]) {\n      return _constants.NOT_HANDLED;\n    }\n\n    if (blockType === finalType[0]) {\n      fType = finalType[1];\n    } else {\n      fType = finalType[2];\n    }\n  }\n\n  onChange((0, _model.resetBlockWithType)(editorState, fType, {\n    text: ''\n  }));\n  return _constants.HANDLED;\n};\n\nexports.default = beforeInput;","map":null,"metadata":{},"sourceType":"script"}