{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\nReturns the `boundingClientRect` of the passed selection.\n*/\n\nvar getSelectionRect = exports.getSelectionRect = function getSelectionRect(selected) {\n  var _rect = selected.getRangeAt(0).getBoundingClientRect(); // selected.getRangeAt(0).getBoundingClientRect()\n\n\n  var rect = _rect && _rect.top ? _rect : selected.getRangeAt(0).getClientRects()[0];\n\n  if (!rect) {\n    if (selected.anchorNode && selected.anchorNode.getBoundingClientRect) {\n      rect = selected.anchorNode.getBoundingClientRect();\n      rect.isEmptyline = true;\n    } else {\n      return null;\n    }\n  }\n\n  return rect;\n};\n/*\nReturns the native selection node.\n*/\n\n\nvar getSelection = exports.getSelection = function getSelection(root) {\n  var t = null;\n\n  if (root.getSelection) {\n    t = root.getSelection();\n  } else if (root.document.getSelection) {\n    t = root.document.getSelection();\n  } else if (root.document.selection) {\n    t = root.document.selection.createRange().text;\n  }\n\n  return t;\n};\n/*\nRecursively finds the DOM Element of the block where the cursor is currently present.\nIf not found, returns null.\n*/\n\n\nvar getSelectedBlockNode = exports.getSelectedBlockNode = function getSelectedBlockNode(root) {\n  var selection = root.getSelection();\n\n  if (selection.rangeCount === 0) {\n    return null;\n  }\n\n  var node = selection.getRangeAt(0).startContainer; // console.log(node);\n\n  do {\n    if (node.getAttribute && node.getAttribute('data-block') === 'true') {\n      return node;\n    }\n\n    node = node.parentNode; // console.log(node);\n  } while (node !== null);\n\n  return null;\n};","map":null,"metadata":{},"sourceType":"script"}