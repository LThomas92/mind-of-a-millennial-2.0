{"ast":null,"code":"\"use strict\"; // Actual implementation of the Performance class.\n\nvar _classCallCheck = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/createClass\");\n\nvar clockIsAccurate = require(\"./clock-is-accurate\");\n\nvar calculateClockOffset = require(\"./calculate-clock-offset\");\n\nvar _require = require(\"./utils\"),\n    hrtime = _require.hrtime,\n    toMS = _require.toMS;\n\nvar kTimeOrigin = Symbol(\"time origin\");\nvar kTimeOriginTimestamp = Symbol(\"time origin timestamp\");\n\nvar Performance =\n/*#__PURE__*/\nfunction () {\n  function Performance() {\n    _classCallCheck(this, Performance);\n\n    // Time origin.\n    var timeOrigin = hrtime();\n    this[kTimeOrigin] = timeOrigin;\n\n    if (clockIsAccurate) {\n      // Let |t1| be the DOMHighResTimeStamp representing the high resolution Unix time at which the global monotonic\n      // clock is zero. This has to be calculated for every Performance object to account for clock drifts.\n      var t1 = calculateClockOffset(); // Let |t2| be the DOMHighResTimeStamp representing the high resolution time value of the global monotonic clock\n      // at global's time origin.\n\n      var t2 = toMS(timeOrigin); // Return the sum of |t1| and |t2|.\n\n      this[kTimeOriginTimestamp] = t1 + t2;\n    } else {\n      // Clock isn't accurate enough. Use millisecond accuracy per spec.\n      var cur = Date.now();\n      this[kTimeOriginTimestamp] = cur;\n    }\n  } // The timeOrigin getter actually returns the time origin timestamp, not the raw time origin.\n\n\n  _createClass(Performance, [{\n    key: \"now\",\n    value: function now() {\n      var diff = toMS(hrtime(this[kTimeOrigin]));\n      return clockIsAccurate ? diff : Math.round(diff);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        timeOrigin: this.timeOrigin\n      };\n    }\n  }, {\n    key: \"timeOrigin\",\n    get: function get() {\n      return this[kTimeOriginTimestamp];\n    }\n  }]);\n\n  return Performance;\n}();\n\nmodule.exports = {\n  Performance: Performance\n};","map":null,"metadata":{},"sourceType":"script"}