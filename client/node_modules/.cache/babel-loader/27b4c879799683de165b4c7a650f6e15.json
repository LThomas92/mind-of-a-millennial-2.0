{"ast":null,"code":"'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactRedux = require('react-redux');\n\nvar _actions = require('./actions');\n\nvar actions = _interopRequireWildcard(_actions);\n\nvar _reducer = require('./reducer');\n\nvar _reducer2 = _interopRequireDefault(_reducer);\n\nvar _reactNotificationSystem = require('react-notification-system');\n\nvar _reactNotificationSystem2 = _interopRequireDefault(_reactNotificationSystem);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj['default'] = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Notifications = function (_React$Component) {\n  _inherits(Notifications, _React$Component);\n\n  function Notifications(props) {\n    _classCallCheck(this, Notifications);\n\n    var _this = _possibleConstructorReturn(this, (Notifications.__proto__ || Object.getPrototypeOf(Notifications)).call(this, props));\n\n    _this.notifyRef = _react2['default'].createRef();\n    return _this;\n  }\n\n  _createClass(Notifications, [{\n    key: 'system',\n    value: function () {\n      function system() {\n        return this.notifyRef.current;\n      }\n\n      return system;\n    }()\n  }, {\n    key: 'componentDidUpdate',\n    value: function () {\n      function componentDidUpdate(prevProps) {\n        var _this2 = this;\n\n        var _props = this.props,\n            notifications = _props.notifications,\n            store = _props.store;\n        var notificationIds = notifications.map(function (notification) {\n          return notification.uid;\n        });\n        var systemNotifications = this.system().state.notifications || [];\n\n        if (notifications.length > 0) {\n          // Get all active notifications from react-notification-system\n          /// and remove all where uid is not found in the reducer\n          systemNotifications.forEach(function (notification) {\n            if (notificationIds.indexOf(notification.uid) < 0) {\n              _this2.system().removeNotification(notification.uid);\n            }\n          });\n          notifications.forEach(function (notification) {\n            _this2.system().addNotification(_extends({}, notification, {\n              onRemove: function () {\n                function onRemove() {\n                  store.dispatch(actions.hide(notification.uid));\n                  notification.onRemove && notification.onRemove();\n                }\n\n                return onRemove;\n              }()\n            }));\n          });\n        }\n\n        if (prevProps.notifications !== notifications && notifications.length === 0) {\n          this.system().clearNotifications();\n        }\n      }\n\n      return componentDidUpdate;\n    }()\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function () {\n      function shouldComponentUpdate(nextProps) {\n        return this.props !== nextProps;\n      }\n\n      return shouldComponentUpdate;\n    }()\n  }, {\n    key: 'render',\n    value: function () {\n      function render() {\n        var _props2 = this.props,\n            notifications = _props2.notifications,\n            store = _props2.store,\n            rest = _objectWithoutProperties(_props2, ['notifications', 'store']);\n\n        return _react2['default'].createElement(_reactNotificationSystem2['default'], _extends({\n          ref: this.notifyRef\n        }, rest));\n      }\n\n      return render;\n    }()\n  }]);\n\n  return Notifications;\n}(_react2['default'].Component);\n\nNotifications.propTypes = {\n  notifications: _propTypes2['default'].array,\n  store: _propTypes2['default'].shape({\n    dispatch: _propTypes2['default'].func.isRequired\n  }).isRequired\n};\n\nvar NotificationsWithContext = function NotificationsWithContext(props) {\n  var Context = props.context || _reactRedux.ReactReduxContext;\n\n  if (Context == null) {\n    throw 'Please upgrade to react-redux v6';\n  }\n\n  return _react2['default'].createElement(Context.Consumer, null, function (otherProps) {\n    var store = otherProps.store;\n    return _react2['default'].createElement(Notifications, _extends({\n      store: store\n    }, props));\n  });\n};\n\nNotificationsWithContext.propTypes = {\n  context: _propTypes2['default'].object\n}; // Tie actions to Notifications component instance\n\nObject.keys(actions).forEach(function (key) {\n  NotificationsWithContext[key] = actions[key];\n});\nNotificationsWithContext.reducer = _reducer2['default'];\nmodule.exports = NotificationsWithContext;","map":null,"metadata":{},"sourceType":"script"}