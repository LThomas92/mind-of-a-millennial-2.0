{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class, _temp;\n/*\n * Copyright (c) 2016, Globo.com (https://github.com/globocom)\n *\n * License: MIT\n */\n\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require(\"react-dom\");\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require(\"classnames\");\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _DropdownItem = require(\"./DropdownItem\");\n\nvar _DropdownItem2 = _interopRequireDefault(_DropdownItem);\n\nvar _icons = require(\"../icons\");\n\nvar _icons2 = _interopRequireDefault(_icons);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Dropdown = (_temp = _class = function (_Component) {\n  _inherits(Dropdown, _Component);\n\n  function Dropdown(props) {\n    _classCallCheck(this, Dropdown);\n\n    var _this = _possibleConstructorReturn(this, (Dropdown.__proto__ || Object.getPrototypeOf(Dropdown)).call(this, props));\n\n    _this.state = {\n      isOpen: false\n    };\n    _this.handleDocumentClick = _this.handleDocumentClick.bind(_this);\n    _this.toggleDropDown = _this.toggleDropDown.bind(_this);\n    _this.preventSelection = _this.preventSelection.bind(_this);\n    _this.renderItem = _this.renderItem.bind(_this);\n    return _this;\n  }\n\n  _createClass(Dropdown, [{\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      var items = this.props.items || [];\n      return items.length == 0 ? true : false;\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(selected) {\n      this.props.onChange(selected);\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item) {\n      var _this2 = this;\n\n      return _react2.default.createElement(\"li\", {\n        key: item.key\n      }, _react2.default.createElement(_DropdownItem2.default, {\n        item: item,\n        className: \"dropdown__option\",\n        onClick: function onClick() {\n          return _this2.onChange(item.key);\n        }\n      }));\n    }\n  }, {\n    key: \"preventSelection\",\n    value: function preventSelection(event) {\n      window.getSelection().empty();\n      event.preventDefault();\n    }\n  }, {\n    key: \"toggleDropDown\",\n    value: function toggleDropDown(event) {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n  }, {\n    key: \"handleDocumentClick\",\n    value: function handleDocumentClick(event) {\n      if (this.isEmpty()) {\n        return null;\n      }\n\n      if (!_reactDom2.default.findDOMNode(this).contains(event.target)) {\n        this.setState({\n          isOpen: false\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener(\"click\", this.handleDocumentClick, false);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener(\"click\", this.handleDocumentClick, false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.isEmpty()) {\n        return null;\n      }\n\n      var selectedItem = this.props.items.filter(function (obj) {\n        return obj.key === _this3.props.selected;\n      })[0];\n      var isOpen = this.state.isOpen;\n      var wrapperClassName = (0, _classnames2.default)(\"dropdown__wrapper\", {\n        \"dropdown__wrapper--open\": isOpen\n      });\n      var dropdownClassName = (0, _classnames2.default)(\"dropdown\", {\n        \"dropdown--open\": isOpen\n      });\n      var arrowClassName = (0, _classnames2.default)(\"dropdown__arrow\", {\n        \"dropdown__arrow--open\": isOpen\n      });\n      return _react2.default.createElement(\"div\", {\n        className: wrapperClassName,\n        onClick: this.toggleDropDown\n      }, _react2.default.createElement(_DropdownItem2.default, {\n        item: selectedItem,\n        className: \"dropdown__item--selected\",\n        onMouseDown: this.preventSelection\n      }, _react2.default.createElement(_icons2.default.DropdownArrow, {\n        className: arrowClassName\n      })), _react2.default.createElement(\"ul\", {\n        className: dropdownClassName\n      }, this.props.items.map(this.renderItem)));\n    }\n  }]);\n\n  return Dropdown;\n}(_react.Component), _class.propTypes = {\n  items: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    key: _propTypes2.default.string.isRequired,\n    icon: _propTypes2.default.func.isRequired,\n    label: _propTypes2.default.string.isRequired\n  })),\n  selected: _propTypes2.default.string,\n  onChange: _propTypes2.default.func.isRequired\n}, _temp);\nexports.default = Dropdown;","map":null,"metadata":{},"sourceType":"script"}