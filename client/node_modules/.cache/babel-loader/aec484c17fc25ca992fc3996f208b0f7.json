{"ast":null,"code":"import _objectSpread from \"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ADD_ARTICLE, GET_ARTICLE, DELETE_ARTICLE } from \"./types\";\nimport AxiosAPI from \"../components/AxiosAPI\";\nexport const createArticle = data => dispatch => {\n  let formData = new FormData();\n  formData.append(\"title\", data.title);\n  formData.append(\"image\", data.image[0]);\n  formData.append(\"imgSource\", data.imgSource);\n  formData.append(\"text\", data.text);\n  const response = AxiosAPI.post(\"/api/articles/add\", _objectSpread({}, data));\n  dispatch({\n    type: ADD_ARTICLE,\n    payload: response.data\n  });\n};\nexport const deleteArticleSuccess = id => {\n  return {\n    type: DELETE_ARTICLE,\n    payload: {\n      id\n    }\n  };\n};\nexport const deleteArticle = id => {\n  return dispatch => {\n    return AxiosAPI.get(\"/api/articles/\" + id).then(response => {\n      dispatch(deleteArticleSuccess(response.data));\n    }).catch(error => {\n      throw error;\n    });\n  };\n};\nexport const getArticles = articles => {\n  return {\n    type: GET_ARTICLE,\n    articles\n  };\n};\nexport const getAllArticles = () => {\n  return dispatch => {\n    return AxiosAPI.get(\"/api/articles\").then(response => {\n      dispatch(getArticles(response.data));\n    }).catch(error => {\n      throw error;\n    });\n  };\n};","map":{"version":3,"sources":["/Users/Lawrence/Desktop/mind-of-a-millennial/client/src/actions/articleActions.js"],"names":["ADD_ARTICLE","GET_ARTICLE","DELETE_ARTICLE","AxiosAPI","createArticle","data","dispatch","formData","FormData","append","title","image","imgSource","text","response","post","type","payload","deleteArticleSuccess","id","deleteArticle","get","then","catch","error","getArticles","articles","getAllArticles"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,WAAtB,EAAmCC,cAAnC,QAAyD,SAAzD;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,OAAO,MAAMC,aAAa,GAAGC,IAAI,IAAIC,QAAQ,IAAI;AAC/C,MAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBJ,IAAI,CAACK,KAA9B;AACAH,EAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBJ,IAAI,CAACM,KAAL,CAAW,CAAX,CAAzB;AACAJ,EAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6BJ,IAAI,CAACO,SAAlC;AACAL,EAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBJ,IAAI,CAACQ,IAA7B;AAEA,QAAMC,QAAQ,GAAGX,QAAQ,CAACY,IAAT,CAAc,mBAAd,oBAAwCV,IAAxC,EAAjB;AAEAC,EAAAA,QAAQ,CAAC;AAAEU,IAAAA,IAAI,EAAEhB,WAAR;AAAqBiB,IAAAA,OAAO,EAAEH,QAAQ,CAACT;AAAvC,GAAD,CAAR;AACD,CAVM;AAYP,OAAO,MAAMa,oBAAoB,GAAGC,EAAE,IAAI;AACxC,SAAO;AACLH,IAAAA,IAAI,EAAEd,cADD;AAELe,IAAAA,OAAO,EAAE;AACPE,MAAAA;AADO;AAFJ,GAAP;AAMD,CAPM;AASP,OAAO,MAAMC,aAAa,GAAGD,EAAE,IAAI;AACjC,SAAOb,QAAQ,IAAI;AACjB,WAAOH,QAAQ,CAACkB,GAAT,CAAa,mBAAmBF,EAAhC,EACJG,IADI,CACCR,QAAQ,IAAI;AAChBR,MAAAA,QAAQ,CAACY,oBAAoB,CAACJ,QAAQ,CAACT,IAAV,CAArB,CAAR;AACD,KAHI,EAIJkB,KAJI,CAIEC,KAAK,IAAI;AACd,YAAMA,KAAN;AACD,KANI,CAAP;AAOD,GARD;AASD,CAVM;AAYP,OAAO,MAAMC,WAAW,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLV,IAAAA,IAAI,EAAEf,WADD;AAELyB,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,SAAOrB,QAAQ,IAAI;AACjB,WAAOH,QAAQ,CAACkB,GAAT,CAAa,eAAb,EACJC,IADI,CACCR,QAAQ,IAAI;AAChBR,MAAAA,QAAQ,CAACmB,WAAW,CAACX,QAAQ,CAACT,IAAV,CAAZ,CAAR;AACD,KAHI,EAIJkB,KAJI,CAIEC,KAAK,IAAI;AACd,YAAMA,KAAN;AACD,KANI,CAAP;AAOD,GARD;AASD,CAVM","sourcesContent":["import { ADD_ARTICLE, GET_ARTICLE, DELETE_ARTICLE } from \"./types\";\nimport AxiosAPI from \"../components/AxiosAPI\";\n\nexport const createArticle = data => dispatch => {\n  let formData = new FormData();\n  formData.append(\"title\", data.title);\n  formData.append(\"image\", data.image[0]);\n  formData.append(\"imgSource\", data.imgSource);\n  formData.append(\"text\", data.text);\n\n  const response = AxiosAPI.post(\"/api/articles/add\", { ...data });\n\n  dispatch({ type: ADD_ARTICLE, payload: response.data });\n};\n\nexport const deleteArticleSuccess = id => {\n  return {\n    type: DELETE_ARTICLE,\n    payload: {\n      id\n    }\n  };\n};\n\nexport const deleteArticle = id => {\n  return dispatch => {\n    return AxiosAPI.get(\"/api/articles/\" + id)\n      .then(response => {\n        dispatch(deleteArticleSuccess(response.data));\n      })\n      .catch(error => {\n        throw error;\n      });\n  };\n};\n\nexport const getArticles = articles => {\n  return {\n    type: GET_ARTICLE,\n    articles\n  };\n};\n\nexport const getAllArticles = () => {\n  return dispatch => {\n    return AxiosAPI.get(\"/api/articles\")\n      .then(response => {\n        dispatch(getArticles(response.data));\n      })\n      .catch(error => {\n        throw error;\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}