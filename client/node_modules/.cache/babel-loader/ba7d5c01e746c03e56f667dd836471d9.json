{"ast":null,"code":"//.CommonJS\nvar CSSOM = {}; ///CommonJS\n\n/**\n * @constructor\n * @see https://developer.mozilla.org/en/CSS/@-moz-document\n */\n\nCSSOM.MatcherList = function MatcherList() {\n  this.length = 0;\n};\n\nCSSOM.MatcherList.prototype = {\n  constructor: CSSOM.MatcherList,\n\n  /**\n   * @return {string}\n   */\n  get matcherText() {\n    return Array.prototype.join.call(this, \", \");\n  },\n\n  /**\n   * @param {string} value\n   */\n  set matcherText(value) {\n    // just a temporary solution, actually it may be wrong by just split the value with ',', because a url can include ','.\n    var values = value.split(\",\");\n    var length = this.length = values.length;\n\n    for (var i = 0; i < length; i++) {\n      this[i] = values[i].trim();\n    }\n  },\n\n  /**\n   * @param {string} matcher\n   */\n  appendMatcher: function appendMatcher(matcher) {\n    if (Array.prototype.indexOf.call(this, matcher) === -1) {\n      this[this.length] = matcher;\n      this.length++;\n    }\n  },\n\n  /**\n   * @param {string} matcher\n   */\n  deleteMatcher: function deleteMatcher(matcher) {\n    var index = Array.prototype.indexOf.call(this, matcher);\n\n    if (index !== -1) {\n      Array.prototype.splice.call(this, index, 1);\n    }\n  }\n}; //.CommonJS\n\nexports.MatcherList = CSSOM.MatcherList; ///CommonJS","map":null,"metadata":{},"sourceType":"script"}