{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactTransitionGroup = require('react-transition-group');\n\nvar _util = require('../util');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // import './addbutton.scss';\n\n/**\n * Implementation of the medium-link side `+` button to insert various rich blocks\n * like Images/Embeds/Videos.\n */\n\n\nvar AddButton = function (_React$Component) {\n  _inherits(AddButton, _React$Component);\n\n  function AddButton(props) {\n    _classCallCheck(this, AddButton);\n\n    var _this = _possibleConstructorReturn(this, (AddButton.__proto__ || Object.getPrototypeOf(AddButton)).call(this, props));\n\n    _this.state = {\n      style: {},\n      visible: false,\n      isOpen: false\n    };\n    _this.node = null;\n    _this.blockKey = '';\n    _this.blockType = '';\n    _this.blockLength = -1;\n    _this.findNode = _this.findNode.bind(_this);\n    _this.hideBlock = _this.hideBlock.bind(_this);\n    _this.openToolbar = _this.openToolbar.bind(_this);\n    return _this;\n  } // To show + button only when text length == 0\n\n\n  _createClass(AddButton, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(newProps) {\n      var editorState = newProps.editorState;\n      var contentState = editorState.getCurrentContent();\n      var selectionState = editorState.getSelection();\n\n      if (!selectionState.isCollapsed() || selectionState.anchorKey !== selectionState.focusKey || contentState.getBlockForKey(selectionState.getAnchorKey()).getType().indexOf('atomic') >= 0) {\n        // console.log('no sel');\n        this.hideBlock();\n        return;\n      }\n\n      var block = contentState.getBlockForKey(selectionState.anchorKey);\n      var bkey = block.getKey();\n\n      if (block.getLength() > 0) {\n        this.hideBlock();\n        return;\n      }\n\n      if (block.getType() !== this.blockType) {\n        this.blockType = block.getType();\n\n        if (block.getLength() === 0) {\n          setTimeout(this.findNode, 0);\n        }\n\n        this.blockKey = bkey;\n        return;\n      }\n\n      if (this.blockKey === bkey) {\n        // console.log('block exists');\n        if (block.getLength() > 0) {\n          this.hideBlock();\n        } else {\n          this.setState({\n            visible: true\n          });\n        }\n\n        return;\n      }\n\n      this.blockKey = bkey;\n\n      if (block.getLength() > 0) {\n        // console.log('no len');\n        this.hideBlock();\n        return;\n      }\n\n      setTimeout(this.findNode, 0);\n    }\n  }, {\n    key: 'hideBlock',\n    value: function hideBlock() {\n      if (this.state.visible) {\n        this.setState({\n          visible: false,\n          isOpen: false\n        });\n      }\n    }\n  }, {\n    key: 'openToolbar',\n    value: function openToolbar() {\n      var _this2 = this;\n\n      this.setState({\n        isOpen: !this.state.isOpen\n      }, function () {\n        // callback function\n        // save page state\n        var x = window.scrollX;\n        var y = window.scrollY; // do focus\n\n        _this2.props.focus(); // back previous window state\n\n\n        window.scrollTo(x, y);\n      });\n    }\n  }, {\n    key: 'findNode',\n    value: function findNode() {\n      // eslint-disable-next-line no-undef\n      var node = (0, _util.getSelectedBlockNode)(window);\n\n      if (node === this.node) {\n        // console.log('Node exists');\n        return;\n      }\n\n      if (!node) {\n        // console.log('no node');\n        this.setState({\n          visible: false,\n          isOpen: false\n        });\n        return;\n      } // const rect = node.getBoundingClientRect();\n\n\n      this.node = node;\n      this.setState({\n        visible: true,\n        style: {\n          top: node.offsetTop - 3\n        }\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      if (!this.state.visible) {\n        return null;\n      }\n\n      return _react2.default.createElement('div', {\n        className: 'md-side-toolbar',\n        style: this.state.style\n      }, _react2.default.createElement('button', {\n        onClick: this.openToolbar,\n        className: 'md-sb-button md-add-button' + (this.state.isOpen ? ' md-open-button' : ''),\n        type: 'button'\n      }, _react2.default.createElement('svg', {\n        viewBox: '0 0 8 8',\n        height: '14',\n        width: '14'\n      }, _react2.default.createElement('path', {\n        d: 'M3 0v3h-3v2h3v3h2v-3h3v-2h-3v-3h-2z'\n      }))), this.state.isOpen ? _react2.default.createElement(_reactTransitionGroup.TransitionGroup, null, this.props.sideButtons.map(function (button) {\n        var Button = button.component;\n        var extraProps = button.props ? button.props : {};\n        return _react2.default.createElement(_reactTransitionGroup.CSSTransition, {\n          key: button.title,\n          classNames: 'md-add-btn-anim',\n          appear: true,\n          timeout: {\n            enter: 200,\n            exit: 100,\n            appear: 100\n          }\n        }, _react2.default.createElement(Button, _extends({}, extraProps, {\n          getEditorState: _this3.props.getEditorState,\n          setEditorState: _this3.props.setEditorState,\n          close: _this3.openToolbar\n        })));\n      })) : null);\n    }\n  }]);\n\n  return AddButton;\n}(_react2.default.Component);\n\nexports.default = AddButton;\nAddButton.propTypes = {\n  focus: _propTypes2.default.func,\n  getEditorState: _propTypes2.default.func.isRequired,\n  setEditorState: _propTypes2.default.func.isRequired,\n  sideButtons: _propTypes2.default.arrayOf(_propTypes2.default.object)\n};","map":null,"metadata":{},"sourceType":"script"}