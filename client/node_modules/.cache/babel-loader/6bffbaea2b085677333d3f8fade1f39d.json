{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _constants = require('./constants');\n/*\nGet custom classnames for each of the different block types supported.\n*/\n\n\nvar BASE_BLOCK_CLASS = 'md-block';\n\nexports.default = function (block) {\n  switch (block.getType()) {\n    case _constants.Block.BLOCKQUOTE:\n      return BASE_BLOCK_CLASS + ' ' + BASE_BLOCK_CLASS + '-quote md-RichEditor-blockquote';\n\n    case _constants.Block.UNSTYLED:\n      return BASE_BLOCK_CLASS + ' ' + BASE_BLOCK_CLASS + '-paragraph';\n\n    case _constants.Block.ATOMIC:\n      return BASE_BLOCK_CLASS + ' ' + BASE_BLOCK_CLASS + '-atomic';\n\n    case _constants.Block.CAPTION:\n      return BASE_BLOCK_CLASS + ' ' + BASE_BLOCK_CLASS + '-caption';\n\n    case _constants.Block.TODO:\n      {\n        var data = block.getData();\n        var checkedClass = data.get('checked') === true ? BASE_BLOCK_CLASS + '-todo-checked' : BASE_BLOCK_CLASS + '-todo-unchecked';\n        var finalClass = BASE_BLOCK_CLASS + ' ' + BASE_BLOCK_CLASS + '-paragraph ';\n        finalClass += BASE_BLOCK_CLASS + '-todo ' + checkedClass;\n        return finalClass;\n      }\n\n    case _constants.Block.IMAGE:\n      return BASE_BLOCK_CLASS + ' ' + BASE_BLOCK_CLASS + '-image';\n\n    case _constants.Block.BLOCKQUOTE_CAPTION:\n      {\n        var cls = BASE_BLOCK_CLASS + ' ' + BASE_BLOCK_CLASS + '-quote';\n        return cls + ' md-RichEditor-blockquote ' + BASE_BLOCK_CLASS + '-quote-caption';\n      }\n\n    case _constants.Block.CODE:\n      return BASE_BLOCK_CLASS + ' ' + BASE_BLOCK_CLASS + '-code-block';\n\n    default:\n      return BASE_BLOCK_CLASS;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}