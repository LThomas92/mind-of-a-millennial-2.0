{"ast":null,"code":"\"use strict\";\n\nvar whatwgURL = require(\"whatwg-url\");\n\nexports.documentBaseURL = function (document) {\n  // https://html.spec.whatwg.org/multipage/infrastructure.html#document-base-url\n  var firstBase = document.querySelector(\"base[href]\");\n  var fallbackBaseURL = exports.fallbackBaseURL(document);\n\n  if (firstBase === null) {\n    return fallbackBaseURL;\n  }\n\n  return frozenBaseURL(firstBase, fallbackBaseURL);\n};\n\nexports.documentBaseURLSerialized = function (document) {\n  return whatwgURL.serializeURL(exports.documentBaseURL(document));\n};\n\nexports.fallbackBaseURL = function (document) {\n  // https://html.spec.whatwg.org/multipage/infrastructure.html#fallback-base-url\n  // Unimplemented: <iframe srcdoc>\n  if (document.URL === \"about:blank\" && document._defaultView && document._defaultView._parent !== document._defaultView) {\n    return exports.documentBaseURL(document._defaultView._parent._document);\n  }\n\n  return document._URL;\n};\n\nexports.parseURLToResultingURLRecord = function (url, document) {\n  // https://html.spec.whatwg.org/#resolve-a-url\n  // Encoding stuff ignored; always UTF-8 for us, for now.\n  var baseURL = exports.documentBaseURL(document);\n  return whatwgURL.parseURL(url, {\n    baseURL: baseURL\n  }); // This returns the resulting URL record; to get the resulting URL string, just serialize it.\n};\n\nfunction frozenBaseURL(baseElement, fallbackBaseURL) {\n  // https://html.spec.whatwg.org/multipage/semantics.html#frozen-base-url\n  // The spec is eager (setting the frozen base URL when things change); we are lazy (getting it when we need to)\n  var baseHrefAttribute = baseElement.getAttribute(\"href\");\n  var result = whatwgURL.parseURL(baseHrefAttribute, {\n    baseURL: fallbackBaseURL\n  });\n  return result === null ? fallbackBaseURL : result;\n}","map":null,"metadata":{},"sourceType":"script"}