{"ast":null,"code":"var fs = require(\"fs\");\n\nvar promisify = require(\"./_promisify.js\");\n\nvar bind = function bind(c, f) {\n  return f && f.bind(c);\n};\n\nObject.defineProperties(module.exports, {\n  F_OK: {\n    enumerable: true,\n    value: fs.F_OK\n  },\n  FileReadStream: {\n    enumerable: true,\n    value: fs.FileReadStream\n  },\n  FileWriteStream: {\n    enumerable: true,\n    value: fs.FileWriteStream\n  },\n  R_OK: {\n    enumerable: true,\n    value: fs.R_OK\n  },\n  ReadStream: {\n    enumerable: true,\n    value: fs.ReadStream\n  },\n  Stats: {\n    enumerable: true,\n    value: fs.Stats\n  },\n  W_OK: {\n    enumerable: true,\n    value: fs.W_OK\n  },\n  WriteStream: {\n    enumerable: true,\n    value: fs.WriteStream\n  },\n  X_OK: {\n    enumerable: true,\n    value: fs.X_OK\n  },\n  //_toUnixTimestamp: // skipping\n  access: {\n    enumerable: true,\n    value: promisify(fs, fs.access, 1)\n  },\n  accessSync: {\n    enumerable: true,\n    value: bind(fs, fs.accessSync)\n  },\n  appendFile: {\n    enumerable: true,\n    value: promisify(fs, fs.appendFile, 2)\n  },\n  appendFileSync: {\n    enumerable: true,\n    value: bind(fs, fs.appendFileSync)\n  },\n  chmod: {\n    enumerable: true,\n    value: promisify(fs, fs.chmod, 2)\n  },\n  chmodSync: {\n    enumerable: true,\n    value: bind(fs, fs.chmodSync)\n  },\n  chown: {\n    enumerable: true,\n    value: promisify(fs, fs.chown, 3)\n  },\n  chownSync: {\n    enumerable: true,\n    value: bind(fs, fs.chownSync)\n  },\n  close: {\n    enumerable: true,\n    value: promisify(fs, fs.close, 1)\n  },\n  closeSync: {\n    enumerable: true,\n    value: bind(fs, fs.closeSync)\n  },\n  constants: {\n    enumerable: true,\n    get: function get() {\n      return fs.constants;\n    },\n    set: function set(v) {\n      fs.constants = v;\n    }\n  },\n  copyFile: {\n    enumerable: true,\n    value: promisify(fs, fs.copyFile, 2)\n  },\n  copyFileSync: {\n    enumerable: true,\n    value: bind(fs, fs.copyFileSync)\n  },\n  createReadStream: {\n    enumerable: true,\n    value: bind(fs, fs.createReadStream)\n  },\n  createWriteStream: {\n    enumerable: true,\n    value: bind(fs, fs.createWriteStream)\n  },\n  exists: {\n    enumerable: true,\n    value: promisify(fs, fs.exists, 1, {\n      \"noError\": true\n    })\n  },\n  existsSync: {\n    enumerable: true,\n    value: bind(fs, fs.existsSync)\n  },\n  fchmod: {\n    enumerable: true,\n    value: promisify(fs, fs.fchmod, 2)\n  },\n  fchmodSync: {\n    enumerable: true,\n    value: bind(fs, fs.fchmodSync)\n  },\n  fchown: {\n    enumerable: true,\n    value: promisify(fs, fs.fchown, 3)\n  },\n  fchownSync: {\n    enumerable: true,\n    value: bind(fs, fs.fchownSync)\n  },\n  fdatasync: {\n    enumerable: true,\n    value: promisify(fs, fs.fdatasync, 1)\n  },\n  fdatasyncSync: {\n    enumerable: true,\n    value: bind(fs, fs.fdatasyncSync)\n  },\n  fstat: {\n    enumerable: true,\n    value: promisify(fs, fs.fstat, 1)\n  },\n  fstatSync: {\n    enumerable: true,\n    value: bind(fs, fs.fstatSync)\n  },\n  fsync: {\n    enumerable: true,\n    value: promisify(fs, fs.fsync, 1)\n  },\n  fsyncSync: {\n    enumerable: true,\n    value: bind(fs, fs.fsyncSync)\n  },\n  ftruncate: {\n    enumerable: true,\n    value: promisify(fs, fs.ftruncate, 2)\n  },\n  ftruncateSync: {\n    enumerable: true,\n    value: bind(fs, fs.ftruncateSync)\n  },\n  futimes: {\n    enumerable: true,\n    value: promisify(fs, fs.futimes, 3)\n  },\n  futimesSync: {\n    enumerable: true,\n    value: bind(fs, fs.futimesSync)\n  },\n  link: {\n    enumerable: true,\n    value: promisify(fs, fs.link, 2)\n  },\n  linkSync: {\n    enumerable: true,\n    value: bind(fs, fs.linkSync)\n  },\n  lstat: {\n    enumerable: true,\n    value: promisify(fs, fs.lstat, 1)\n  },\n  lstatSync: {\n    enumerable: true,\n    value: bind(fs, fs.lstatSync)\n  },\n  mkdir: {\n    enumerable: true,\n    value: promisify(fs, fs.mkdir, 1)\n  },\n  mkdirSync: {\n    enumerable: true,\n    value: bind(fs, fs.mkdirSync)\n  },\n  mkdtemp: {\n    enumerable: true,\n    value: promisify(fs, fs.mkdtemp, 1)\n  },\n  mkdtempSync: {\n    enumerable: true,\n    value: bind(fs, fs.mkdtempSync)\n  },\n  open: {\n    enumerable: true,\n    value: promisify(fs, fs.open, 2)\n  },\n  openSync: {\n    enumerable: true,\n    value: bind(fs, fs.openSync)\n  },\n  read: {\n    enumerable: true,\n    value: promisify(fs, fs.read, 5, {\n      \"pattern\": [\"read\", \"buffer\"]\n    })\n  },\n  readFile: {\n    enumerable: true,\n    value: promisify(fs, fs.readFile, 1)\n  },\n  readFileSync: {\n    enumerable: true,\n    value: bind(fs, fs.readFileSync)\n  },\n  readSync: {\n    enumerable: true,\n    value: bind(fs, fs.readSync)\n  },\n  readdir: {\n    enumerable: true,\n    value: promisify(fs, fs.readdir, 1)\n  },\n  readdirSync: {\n    enumerable: true,\n    value: bind(fs, fs.readdirSync)\n  },\n  readlink: {\n    enumerable: true,\n    value: promisify(fs, fs.readlink, 1)\n  },\n  readlinkSync: {\n    enumerable: true,\n    value: bind(fs, fs.readlinkSync)\n  },\n  realpath: {\n    enumerable: true,\n    value: promisify(fs, fs.realpath, 1)\n  },\n  realpathSync: {\n    enumerable: true,\n    value: bind(fs, fs.realpathSync)\n  },\n  rename: {\n    enumerable: true,\n    value: promisify(fs, fs.rename, 2)\n  },\n  renameSync: {\n    enumerable: true,\n    value: bind(fs, fs.renameSync)\n  },\n  rmdir: {\n    enumerable: true,\n    value: promisify(fs, fs.rmdir, 1)\n  },\n  rmdirSync: {\n    enumerable: true,\n    value: bind(fs, fs.rmdirSync)\n  },\n  stat: {\n    enumerable: true,\n    value: promisify(fs, fs.stat, 1)\n  },\n  statSync: {\n    enumerable: true,\n    value: bind(fs, fs.statSync)\n  },\n  symlink: {\n    enumerable: true,\n    value: promisify(fs, fs.symlink, 2)\n  },\n  symlinkSync: {\n    enumerable: true,\n    value: bind(fs, fs.symlinkSync)\n  },\n  truncate: {\n    enumerable: true,\n    value: promisify(fs, fs.truncate, 2)\n  },\n  truncateSync: {\n    enumerable: true,\n    value: bind(fs, fs.truncateSync)\n  },\n  unlink: {\n    enumerable: true,\n    value: promisify(fs, fs.unlink, 1)\n  },\n  unlinkSync: {\n    enumerable: true,\n    value: bind(fs, fs.unlinkSync)\n  },\n  unwatchFile: {\n    enumerable: true,\n    value: bind(fs, fs.unwatchFile)\n  },\n  utimes: {\n    enumerable: true,\n    value: promisify(fs, fs.utimes, 3)\n  },\n  utimesSync: {\n    enumerable: true,\n    value: bind(fs, fs.utimesSync)\n  },\n  watch: {\n    enumerable: true,\n    value: bind(fs, fs.watch)\n  },\n  watchFile: {\n    enumerable: true,\n    value: bind(fs, fs.watchFile)\n  },\n  write: {\n    enumerable: true,\n    value: promisify(fs, fs.write, 5, {\n      \"pattern\": [\"written\", \"buffer\"]\n    })\n  },\n  writeFile: {\n    enumerable: true,\n    value: promisify(fs, fs.writeFile, 2)\n  },\n  writeFileSync: {\n    enumerable: true,\n    value: bind(fs, fs.writeFileSync)\n  },\n  writeSync: {\n    enumerable: true,\n    value: bind(fs, fs.writeSync)\n  }\n});","map":null,"metadata":{},"sourceType":"script"}