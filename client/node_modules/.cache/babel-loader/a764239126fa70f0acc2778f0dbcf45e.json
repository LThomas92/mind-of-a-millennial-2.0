{"ast":null,"code":"// moment.js language configuration\n// language : Georgian (ka)\n// author : Irakli Janiashvili : https://github.com/irakli-janiashvili\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['moment'], factory); // AMD\n  } else if (typeof exports === 'object') {\n    module.exports = factory(require('../moment')); // Node\n  } else {\n    factory(window.moment); // Browser global\n  }\n})(function (moment) {\n  function monthsCaseReplace(m, format) {\n    var months = {\n      'nominative': 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),\n      'accusative': 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')\n    },\n        nounCase = /D[oD] *MMMM?/.test(format) ? 'accusative' : 'nominative';\n    return months[nounCase][m.month()];\n  }\n\n  function weekdaysCaseReplace(m, format) {\n    var weekdays = {\n      'nominative': 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),\n      'accusative': 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_')\n    },\n        nounCase = /(წინა|შემდეგ)/.test(format) ? 'accusative' : 'nominative';\n    return weekdays[nounCase][m.day()];\n  }\n\n  return moment.lang('ka', {\n    months: monthsCaseReplace,\n    monthsShort: \"იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ\".split(\"_\"),\n    weekdays: weekdaysCaseReplace,\n    weekdaysShort: \"კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ\".split(\"_\"),\n    weekdaysMin: \"კვ_ორ_სა_ოთ_ხუ_პა_შა\".split(\"_\"),\n    longDateFormat: {\n      LT: \"h:mm A\",\n      L: \"DD/MM/YYYY\",\n      LL: \"D MMMM YYYY\",\n      LLL: \"D MMMM YYYY LT\",\n      LLLL: \"dddd, D MMMM YYYY LT\"\n    },\n    calendar: {\n      sameDay: '[დღეს] LT[-ზე]',\n      nextDay: '[ხვალ] LT[-ზე]',\n      lastDay: '[გუშინ] LT[-ზე]',\n      nextWeek: '[შემდეგ] dddd LT[-ზე]',\n      lastWeek: '[წინა] dddd LT-ზე',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: function future(s) {\n        return /(წამი|წუთი|საათი|წელი)/.test(s) ? s.replace(/ი$/, \"ში\") : s + \"ში\";\n      },\n      past: function past(s) {\n        if (/(წამი|წუთი|საათი|დღე|თვე)/.test(s)) {\n          return s.replace(/(ი|ე)$/, \"ის წინ\");\n        }\n\n        if (/წელი/.test(s)) {\n          return s.replace(/წელი$/, \"წლის წინ\");\n        }\n      },\n      s: \"რამდენიმე წამი\",\n      m: \"წუთი\",\n      mm: \"%d წუთი\",\n      h: \"საათი\",\n      hh: \"%d საათი\",\n      d: \"დღე\",\n      dd: \"%d დღე\",\n      M: \"თვე\",\n      MM: \"%d თვე\",\n      y: \"წელი\",\n      yy: \"%d წელი\"\n    },\n    ordinal: function ordinal(number) {\n      if (number === 0) {\n        return number;\n      }\n\n      if (number === 1) {\n        return number + \"-ლი\";\n      }\n\n      if (number < 20 || number <= 100 && number % 20 === 0 || number % 100 === 0) {\n        return \"მე-\" + number;\n      }\n\n      return number + \"-ე\";\n    },\n    week: {\n      dow: 1,\n      doy: 7\n    }\n  });\n});","map":null,"metadata":{},"sourceType":"script"}