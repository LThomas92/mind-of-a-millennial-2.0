{"ast":null,"code":"// moment.js language configuration\n// language : polish (pl)\n// author : Rafal Hirsz : https://github.com/evoL\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['moment'], factory); // AMD\n  } else if (typeof exports === 'object') {\n    module.exports = factory(require('../moment')); // Node\n  } else {\n    factory(window.moment); // Browser global\n  }\n})(function (moment) {\n  var monthsNominative = \"styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień\".split(\"_\"),\n      monthsSubjective = \"stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia\".split(\"_\");\n\n  function plural(n) {\n    return n % 10 < 5 && n % 10 > 1 && ~~(n / 10) !== 1;\n  }\n\n  function translate(number, withoutSuffix, key) {\n    var result = number + \" \";\n\n    switch (key) {\n      case 'm':\n        return withoutSuffix ? 'minuta' : 'minutę';\n\n      case 'mm':\n        return result + (plural(number) ? 'minuty' : 'minut');\n\n      case 'h':\n        return withoutSuffix ? 'godzina' : 'godzinę';\n\n      case 'hh':\n        return result + (plural(number) ? 'godziny' : 'godzin');\n\n      case 'MM':\n        return result + (plural(number) ? 'miesiące' : 'miesięcy');\n\n      case 'yy':\n        return result + (plural(number) ? 'lata' : 'lat');\n    }\n  }\n\n  return moment.lang('pl', {\n    months: function months(momentToFormat, format) {\n      if (/D MMMM/.test(format)) {\n        return monthsSubjective[momentToFormat.month()];\n      } else {\n        return monthsNominative[momentToFormat.month()];\n      }\n    },\n    monthsShort: \"sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru\".split(\"_\"),\n    weekdays: \"niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota\".split(\"_\"),\n    weekdaysShort: \"nie_pon_wt_śr_czw_pt_sb\".split(\"_\"),\n    weekdaysMin: \"N_Pn_Wt_Śr_Cz_Pt_So\".split(\"_\"),\n    longDateFormat: {\n      LT: \"HH:mm\",\n      L: \"DD.MM.YYYY\",\n      LL: \"D MMMM YYYY\",\n      LLL: \"D MMMM YYYY LT\",\n      LLLL: \"dddd, D MMMM YYYY LT\"\n    },\n    calendar: {\n      sameDay: '[Dziś o] LT',\n      nextDay: '[Jutro o] LT',\n      nextWeek: '[W] dddd [o] LT',\n      lastDay: '[Wczoraj o] LT',\n      lastWeek: function lastWeek() {\n        switch (this.day()) {\n          case 0:\n            return '[W zeszłą niedzielę o] LT';\n\n          case 3:\n            return '[W zeszłą środę o] LT';\n\n          case 6:\n            return '[W zeszłą sobotę o] LT';\n\n          default:\n            return '[W zeszły] dddd [o] LT';\n        }\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: \"za %s\",\n      past: \"%s temu\",\n      s: \"kilka sekund\",\n      m: translate,\n      mm: translate,\n      h: translate,\n      hh: translate,\n      d: \"1 dzień\",\n      dd: '%d dni',\n      M: \"miesiąc\",\n      MM: translate,\n      y: \"rok\",\n      yy: translate\n    },\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  });\n});","map":null,"metadata":{},"sourceType":"script"}