{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ModalFooter = exports.ModalBody = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactPortalStateless = require('react-portal-stateless');\n\nvar _reactPortalStateless2 = _interopRequireDefault(_reactPortalStateless);\n\nvar _modal = require('./modal.css');\n\nvar _modal2 = _interopRequireDefault(_modal);\n\nvar _closeButton = require('./close-button.js');\n\nvar _closeButton2 = _interopRequireDefault(_closeButton);\n\nvar _modalBody = require('./modal-body.js');\n\nvar _modalBody2 = _interopRequireDefault(_modalBody);\n\nvar _modalFooter = require('./modal-footer.js');\n\nvar _modalFooter2 = _interopRequireDefault(_modalFooter);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nexports.ModalBody = _modalBody2.default;\nexports.ModalFooter = _modalFooter2.default;\n\nvar Modal = function (_Component) {\n  _inherits(Modal, _Component);\n\n  function Modal(props) {\n    _classCallCheck(this, Modal);\n\n    var _this = _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this, props));\n\n    _this.handleOverlayClick = _this.handleOverlayClick.bind(_this);\n    _this.handleClose = _this.handleClose.bind(_this);\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: 'handleOverlayClick',\n    value: function handleOverlayClick(event) {\n      var classNames = event.target.classList;\n\n      if (classNames.contains('bs-modal__overlay') === false) {\n        return;\n      }\n\n      this.handleClose();\n    }\n  }, {\n    key: 'handleClose',\n    value: function handleClose() {\n      if (!this.props.isOpen) {\n        return;\n      }\n\n      this.props.onCloseRequest();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var modalStyle = _modal2.default.modal;\n\n      if (this.props.width) {\n        modalStyle = _extends({}, modalStyle, {\n          width: this.props.width\n        });\n      }\n\n      if (this.props.height) {\n        modalStyle = _extends({}, modalStyle, {\n          height: this.props.height\n        });\n      }\n\n      var classNames = 'bs-modal ' + (this.props.className || '');\n      return _react2.default.createElement(_reactPortalStateless2.default, {\n        isOpen: this.props.isOpen,\n        closeOnEsc: true,\n        onClose: this.handleClose\n      }, _react2.default.createElement('div', {\n        onKeyDown: this.handleKeyDown,\n        className: classNames,\n        style: _modal2.default.container\n      }, _react2.default.createElement('div', {\n        className: 'bs-modal__overlay',\n        style: _modal2.default.overlay,\n        onClick: this.handleOverlayClick\n      }, _react2.default.createElement('div', {\n        style: modalStyle\n      }, _react2.default.createElement('div', {\n        className: 'bs-modal__header',\n        style: _modal2.default.header\n      }, _react2.default.createElement('span', {\n        className: 'bs-modal__title',\n        style: _modal2.default.title\n      }, this.props.title), _react2.default.createElement(_closeButton2.default, {\n        onClick: this.handleClose\n      })), this.props.children))));\n    }\n  }]);\n\n  return Modal;\n}(_react.Component);\n\nModal.propTypes = {\n  className: _propTypes2.default.string,\n  isOpen: _propTypes2.default.bool,\n  width: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  height: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  title: _propTypes2.default.string,\n  children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),\n  onCloseRequest: _propTypes2.default.func\n};\nModal.defaultProps = {\n  isOpen: false,\n  title: '',\n  onCloseRequest: function onCloseRequest() {}\n};\nexports.default = Modal;","map":null,"metadata":{},"sourceType":"script"}