{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/createClass\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar focusing = require(\"../helpers/focusing\");\n\nvar DOMStringMap = require(\"../generated/DOMStringMap\");\n\nvar HTMLAndSVGElementSharedImpl =\n/*#__PURE__*/\nfunction () {\n  function HTMLAndSVGElementSharedImpl() {\n    _classCallCheck(this, HTMLAndSVGElementSharedImpl);\n  }\n\n  _createClass(HTMLAndSVGElementSharedImpl, [{\n    key: \"_initHTMLAndSVGElement\",\n    value: function _initHTMLAndSVGElement() {\n      this._tabIndex = 0;\n      this._dataset = DOMStringMap.createImpl([], {\n        element: this\n      });\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (!focusing.isFocusableAreaElement(this)) {\n        return;\n      }\n\n      var previous = this._ownerDocument._lastFocusedElement;\n      focusing.fireFocusEventWithTargetAdjustment(\"blur\", previous, this);\n      this._ownerDocument._lastFocusedElement = this;\n      focusing.fireFocusEventWithTargetAdjustment(\"focus\", this, previous);\n\n      if (this._ownerDocument._defaultView._frameElement) {\n        this._ownerDocument._defaultView._frameElement.focus();\n      }\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      if (this._ownerDocument._lastFocusedElement !== this || !focusing.isFocusableAreaElement(this)) {\n        return;\n      }\n\n      focusing.fireFocusEventWithTargetAdjustment(\"blur\", this, this._ownerDocument);\n      this._ownerDocument._lastFocusedElement = null;\n      focusing.fireFocusEventWithTargetAdjustment(\"focus\", this._ownerDocument, this);\n    }\n  }, {\n    key: \"dataset\",\n    get: function get() {\n      return this._dataset;\n    } // TODO this should be [Reflect]able if we added default value support to webidl2js's [Reflect]\n\n  }, {\n    key: \"tabIndex\",\n    get: function get() {\n      if (!this.hasAttribute(\"tabindex\")) {\n        return focusing.isFocusableAreaElement(this) ? 0 : -1;\n      }\n\n      return conversions.long(this.getAttribute(\"tabindex\"));\n    },\n    set: function set(value) {\n      this.setAttribute(\"tabindex\", String(value));\n    }\n  }]);\n\n  return HTMLAndSVGElementSharedImpl;\n}();\n\nexports.implementation = HTMLAndSVGElementSharedImpl;","map":null,"metadata":{},"sourceType":"script"}