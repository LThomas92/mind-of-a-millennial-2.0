{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require(\"../helpers/create-event-accessor\"),\n    setupForSimpleEventAccessors = _require.setupForSimpleEventAccessors;\n\nvar EventTargetImpl = require(\"../events/EventTarget-impl\").implementation;\n\nvar Event = require(\"../generated/Event\");\n\nvar AbortSignalImpl =\n/*#__PURE__*/\nfunction (_EventTargetImpl) {\n  _inherits(AbortSignalImpl, _EventTargetImpl);\n\n  function AbortSignalImpl(args, privateData) {\n    var _this;\n\n    _classCallCheck(this, AbortSignalImpl);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AbortSignalImpl).call(this)); // make event firing possible\n\n    _this._ownerDocument = privateData.window.document;\n    _this.aborted = false;\n    _this.abortAlgorithms = new Set();\n    return _this;\n  }\n\n  _createClass(AbortSignalImpl, [{\n    key: \"_signalAbort\",\n    value: function _signalAbort() {\n      if (this.aborted) {\n        return;\n      }\n\n      this.aborted = true;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.abortAlgorithms[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var algorithm = _step.value;\n          algorithm();\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.abortAlgorithms.clear();\n\n      this._dispatch(Event.createImpl([\"abort\", {\n        bubbles: false,\n        cancelable: false\n      }], {\n        isTrusted: true\n      }));\n    }\n  }, {\n    key: \"_addAlgorithm\",\n    value: function _addAlgorithm(algorithm) {\n      if (this.aborted) {\n        return;\n      }\n\n      this.abortAlgorithms.add(algorithm);\n    }\n  }, {\n    key: \"_removeAlgorithm\",\n    value: function _removeAlgorithm(algorithm) {\n      this.abortAlgorithms.delete(algorithm);\n    }\n  }]);\n\n  return AbortSignalImpl;\n}(EventTargetImpl);\n\nsetupForSimpleEventAccessors(AbortSignalImpl.prototype, [\"abort\"]);\nmodule.exports = {\n  implementation: AbortSignalImpl\n};","map":null,"metadata":{},"sourceType":"script"}