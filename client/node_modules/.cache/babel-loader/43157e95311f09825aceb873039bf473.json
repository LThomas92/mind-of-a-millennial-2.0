{"ast":null,"code":"\"use strict\";\n\nvar _require = require(\"./utils\"),\n    hrtime = _require.hrtime; // The HR-TIME spec calls for 5-μs accuracy. Check that we have that in both hrtime() and Date.now().\n\n\nfunction testClockAccuracy() {\n  // Test hrtime() first. The check is simpler and more stable, and we use hrtime() to measure Date.now()'s performance.\n  var roundTrip = hrtime(hrtime());\n\n  if (roundTrip[0] > 1 || roundTrip[1] > 5e3 * 2) {\n    return false;\n  } // Test Date.now() twice: first with a looser bound (10 μs) but with a smaller run time to filter out very bad\n  // Date.now() performance, and then with a tighter bound (5 μs) to check we have the accuracy we need.\n\n\n  var times; // eslint-disable-next-line no-unused-vars\n\n  var cur;\n  var start;\n  var end;\n  times = 100;\n  start = hrtime();\n\n  while (times-- > 0) {\n    cur = Date.now();\n  }\n\n  end = hrtime(start);\n\n  if (end[0] * 1e9 + end[1] > 1000000) {\n    return false;\n  }\n\n  times = 10000;\n  start = hrtime();\n\n  while (times-- > 0) {\n    cur = Date.now();\n  }\n\n  end = hrtime(start);\n\n  if (end[0] * 1e9 + end[1] > 50000000) {\n    return false;\n  }\n\n  return true;\n} // Warm up the function.\n\n\ntestClockAccuracy();\ntestClockAccuracy();\ntestClockAccuracy();\nvar TIMES = 5;\nvar THRESHOLD = 0.6 * TIMES;\nvar accurates = 0;\n\nfor (var i = 0; i < TIMES; i++) {\n  if (testClockAccuracy()) {\n    accurates++;\n  }\n}\n\nvar isAccurate = accurates >= THRESHOLD;\nmodule.exports = isAccurate;","map":null,"metadata":{},"sourceType":"script"}