{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _require = require(\"./utils.js\"),\n    solelyContainsHTTPTokenCodePoints = _require.solelyContainsHTTPTokenCodePoints;\n\nmodule.exports = function (mimeType) {\n  var serialization = \"\".concat(mimeType.type, \"/\").concat(mimeType.subtype);\n\n  if (mimeType.parameters.size === 0) {\n    return serialization;\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = mimeType.parameters[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _step$value = _slicedToArray(_step.value, 2),\n          name = _step$value[0],\n          value = _step$value[1];\n\n      serialization += \";\";\n      serialization += name;\n      serialization += \"=\";\n\n      if (!solelyContainsHTTPTokenCodePoints(value) || value.length === 0) {\n        value = value.replace(/([\"\\\\])/g, \"\\\\$1\");\n        value = \"\\\"\".concat(value, \"\\\"\");\n      }\n\n      serialization += value;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return serialization;\n};","map":null,"metadata":{},"sourceType":"script"}