{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _updateMutation = _interopRequireDefault(require(\"./util/updateMutation\"));\n\nvar _rangeSort = _interopRequireDefault(require(\"./util/rangeSort\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nvar ENTITY_MAP = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n  '\\n': '<br/>'\n};\n\nvar _default = function _default(block) {\n  var blockText = _toConsumableArray(block.text);\n\n  var entities = block.entityRanges.sort(_rangeSort[\"default\"]);\n  var styles = block.inlineStyleRanges.sort(_rangeSort[\"default\"]);\n  var resultText = '';\n\n  var _loop = function _loop(index) {\n    var _char = blockText[index];\n\n    if (ENTITY_MAP[_char] !== undefined) {\n      var encoded = ENTITY_MAP[_char];\n\n      var resultIndex = _toConsumableArray(resultText).length;\n\n      resultText += encoded;\n\n      var updateForChar = function updateForChar(mutation) {\n        return (0, _updateMutation[\"default\"])(mutation, resultIndex, _char.length, encoded.length, 0, 0);\n      };\n\n      entities = entities.map(updateForChar);\n      styles = styles.map(updateForChar);\n    } else {\n      resultText += _char;\n    }\n  };\n\n  for (var index = 0; index < blockText.length; index++) {\n    _loop(index);\n  }\n\n  return Object.assign({}, block, {\n    text: resultText,\n    inlineStyleRanges: styles,\n    entityRanges: entities\n  });\n};\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}