{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _require = require(\"../helpers/internal-constants\"),\n    domSymbolTree = _require.domSymbolTree;\n\nvar NODE_TYPE = require(\"../node-type\");\n\nvar NonDocumentTypeChildNodeImpl =\n/*#__PURE__*/\nfunction () {\n  function NonDocumentTypeChildNodeImpl() {\n    _classCallCheck(this, NonDocumentTypeChildNodeImpl);\n  }\n\n  _createClass(NonDocumentTypeChildNodeImpl, [{\n    key: \"nextElementSibling\",\n    get: function get() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = domSymbolTree.nextSiblingsIterator(this)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var sibling = _step.value;\n\n          if (sibling.nodeType === NODE_TYPE.ELEMENT_NODE) {\n            return sibling;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"previousElementSibling\",\n    get: function get() {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = domSymbolTree.previousSiblingsIterator(this)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var sibling = _step2.value;\n\n          if (sibling.nodeType === NODE_TYPE.ELEMENT_NODE) {\n            return sibling;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return null;\n    }\n  }]);\n\n  return NonDocumentTypeChildNodeImpl;\n}();\n\nmodule.exports = {\n  implementation: NonDocumentTypeChildNodeImpl\n};","map":null,"metadata":{},"sourceType":"script"}