{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.SideMenu = exports.ToggleButton = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require(\"react-dom\");\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _classnames = require(\"classnames\");\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _icons = require(\"../icons\");\n\nvar _icons2 = _interopRequireDefault(_icons);\n\nrequire(\"setimmediate\");\n\nvar _PluginsModal = require(\"./PluginsModal\");\n\nvar _PluginsModal2 = _interopRequireDefault(_PluginsModal);\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/*\n * Copyright (c) 2016, Globo.com (https://github.com/globocom)\n *\n * License: MIT\n */\n\n\nvar BlockStyles = function (_Component) {\n  _inherits(BlockStyles, _Component);\n\n  function BlockStyles(props) {\n    _classCallCheck(this, BlockStyles);\n\n    var _this = _possibleConstructorReturn(this, (BlockStyles.__proto__ || Object.getPrototypeOf(BlockStyles)).call(this, props));\n\n    _this.state = {\n      isOpen: false\n    };\n    _this.onModalOpenClick = _this.onModalOpenClick.bind(_this);\n    _this.onChange = _this.onChange.bind(_this);\n    _this.toggleModalVisibility = _this.toggleModalVisibility.bind(_this);\n    _this.renderButton = _this.renderButton.bind(_this);\n    return _this;\n  }\n\n  _createClass(BlockStyles, [{\n    key: \"onChange\",\n    value: function onChange(editorState) {\n      this.props.onChange(editorState);\n    }\n  }, {\n    key: \"onModalOpenClick\",\n    value: function onModalOpenClick(e) {\n      e.preventDefault();\n      document.body.classList.add(\"megadraft-modal--open\");\n      this.setState({\n        isOpen: true\n      });\n    }\n  }, {\n    key: \"toggleModalVisibility\",\n    value: function toggleModalVisibility() {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n  }, {\n    key: \"renderModal\",\n    value: function renderModal() {\n      return _react2.default.createElement(_PluginsModal2.default, {\n        i18n: this.props.i18n,\n        toggleModalVisibility: this.toggleModalVisibility,\n        isOpen: this.state.isOpen,\n        plugins: this.props.plugins,\n        onCloseRequest: this.props.onClose,\n        onChange: this.onChange,\n        editorState: this.props.editorState,\n        modalOptions: this.props.modalOptions\n      });\n    }\n  }, {\n    key: \"renderModalButton\",\n    value: function renderModalButton() {\n      return _react2.default.createElement(\"button\", {\n        className: \"sidemenu__button\",\n        onClick: this.onModalOpenClick\n      }, _react2.default.createElement(_icons2.default.MoreIcon, {\n        className: \"sidemenu__button__icon\"\n      }));\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton(item) {\n      var Button = item.buttonComponent;\n      return _react2.default.createElement(\"li\", {\n        key: item.type,\n        className: \"sidemenu__item\"\n      }, _react2.default.createElement(Button, {\n        className: \"sidemenu__button\",\n        title: item.title,\n        editorState: this.props.editorState,\n        onChange: this.onChange\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var maxSidebarButtons = this.props.maxSidebarButtons ? this.props.maxSidebarButtons : this.props.plugins.length;\n      var sidemenuMaxHeight = {\n        maxHeight: this.props.open ? (maxSidebarButtons + 1) * 48 + \"px\" : 0\n      }; // We should hide the modal if the number of plugins < max\n\n      var hasModal = this.props.plugins.length > maxSidebarButtons;\n      var className = (0, _classnames2.default)(\"sidemenu__items\", {\n        \"sidemenu__items--open\": this.props.open\n      });\n      return _react2.default.createElement(\"div\", null, _react2.default.createElement(\"ul\", {\n        style: sidemenuMaxHeight,\n        className: className\n      }, this.props.plugins.slice(0, maxSidebarButtons).map(this.renderButton), hasModal ? this.renderModalButton() : null), hasModal ? this.renderModal() : null);\n    }\n  }]);\n\n  return BlockStyles;\n}(_react.Component);\n\nvar ToggleButton = exports.ToggleButton = function (_Component2) {\n  _inherits(ToggleButton, _Component2);\n\n  function ToggleButton() {\n    _classCallCheck(this, ToggleButton);\n\n    return _possibleConstructorReturn(this, (ToggleButton.__proto__ || Object.getPrototypeOf(ToggleButton)).apply(this, arguments));\n  }\n\n  _createClass(ToggleButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.props.hideSidebarOnBlur && !this.props.hasFocus) {\n        return null;\n      }\n\n      var Icon = _icons2.default.CrossIcon;\n      var className = (0, _classnames2.default)(\"sidemenu__button\", {\n        \"sidemenu__button--open\": this.props.open\n      });\n      return _react2.default.createElement(\"button\", {\n        type: \"button\",\n        ref: function ref(el) {\n          _this3.button = el;\n        },\n        className: className,\n        onClick: function onClick() {\n          _this3.button.focus();\n\n          _this3.props.toggle();\n        }\n      }, _react2.default.createElement(Icon, {\n        className: \"sidemenu__button__icon\"\n      }));\n    }\n  }]);\n\n  return ToggleButton;\n}(_react.Component);\n\nvar SideMenu = exports.SideMenu = function (_Component3) {\n  _inherits(SideMenu, _Component3);\n\n  function SideMenu(props) {\n    _classCallCheck(this, SideMenu);\n\n    var _this4 = _possibleConstructorReturn(this, (SideMenu.__proto__ || Object.getPrototypeOf(SideMenu)).call(this, props));\n\n    _this4.state = {\n      open: false\n    };\n    _this4.toggle = _this4.toggle.bind(_this4);\n    _this4.onChange = _this4.onChange.bind(_this4);\n    return _this4;\n  }\n\n  _createClass(SideMenu, [{\n    key: \"onChange\",\n    value: function onChange(editorState) {\n      this.props.onChange(editorState);\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        open: !this.state.open\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var className = (0, _classnames2.default)(\"sidemenu\", {\n        \"sidemenu--open\": this.state.open\n      });\n      return _react2.default.createElement(\"li\", {\n        className: className\n      }, _react2.default.createElement(ToggleButton, {\n        toggle: this.toggle,\n        hasFocus: this.props.editorHasFocus || this.state.open,\n        hideSidebarOnBlur: this.props.hideSidebarOnBlur,\n        open: this.state.open\n      }), _react2.default.createElement(BlockStyles, {\n        i18n: this.props.i18n,\n        editorState: this.props.editorState,\n        plugins: this.props.plugins,\n        open: this.state.open,\n        onChange: this.onChange,\n        maxSidebarButtons: this.props.maxSidebarButtons,\n        modalOptions: this.props.modalOptions\n      }));\n    }\n  }]);\n\n  return SideMenu;\n}(_react.Component);\n\nvar SideBar = function (_Component4) {\n  _inherits(SideBar, _Component4);\n\n  function SideBar(props) {\n    _classCallCheck(this, SideBar);\n\n    var _this5 = _possibleConstructorReturn(this, (SideBar.__proto__ || Object.getPrototypeOf(SideBar)).call(this, props));\n\n    _this5.state = {\n      top: 0\n    };\n    _this5.onChange = _this5.onChange.bind(_this5);\n    return _this5;\n  }\n\n  _createClass(SideBar, [{\n    key: \"getValidSidebarPlugins\",\n    value: function getValidSidebarPlugins() {\n      var plugins = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.props.plugins[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var plugin = _step.value;\n\n          if (!plugin.buttonComponent || typeof plugin.buttonComponent !== \"function\") {\n            continue;\n          }\n\n          plugins.push(plugin);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return plugins;\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(editorState) {\n      this.props.onChange(editorState);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this6 = this;\n\n      if (this.updatingPosition) {\n        clearImmediate(this.updatingPosition);\n      }\n\n      this.updatingPosition = null;\n      this.updatingPosition = setImmediate(function () {\n        return _this6.setBarPosition();\n      });\n    }\n  }, {\n    key: \"setBarPosition\",\n    value: function setBarPosition() {\n      var container = _reactDom2.default.findDOMNode(this.containerEl);\n\n      var editor = container ? container.parentElement : null;\n      var selection = window.getSelection();\n\n      if (selection.rangeCount === 0) {\n        return null;\n      }\n\n      var element = (0, _utils.getSelectedBlockElement)(selection.getRangeAt(0));\n\n      if (!element || !container || !editor || !editor.contains(element)) {\n        return;\n      }\n\n      var containerTop = container.getBoundingClientRect().top - document.documentElement.clientTop;\n      var top = element.getBoundingClientRect().top - 4 - containerTop;\n      top = Math.max(0, Math.floor(top));\n\n      if (this.state.top !== top) {\n        this.setState({\n          top: top\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      if (this.props.readOnly) {\n        return null;\n      }\n\n      return _react2.default.createElement(\"div\", {\n        ref: function ref(el) {\n          _this7.containerEl = el;\n        },\n        className: \"sidebar\"\n      }, _react2.default.createElement(\"div\", {\n        style: {\n          top: this.state.top + \"px\"\n        },\n        className: \"sidebar__menu\"\n      }, _react2.default.createElement(\"ul\", {\n        className: \"sidebar__sidemenu-wrapper\"\n      }, _react2.default.createElement(SideMenu, {\n        i18n: this.props.i18n,\n        editorState: this.props.editorState,\n        onChange: this.onChange,\n        plugins: this.getValidSidebarPlugins(),\n        maxSidebarButtons: this.props.maxSidebarButtons,\n        editorHasFocus: this.props.editorHasFocus,\n        hideSidebarOnBlur: this.props.hideSidebarOnBlur,\n        modalOptions: this.props.modalOptions\n      }))));\n    }\n  }]);\n\n  return SideBar;\n}(_react.Component);\n\nexports.default = SideBar;","map":null,"metadata":{},"sourceType":"script"}