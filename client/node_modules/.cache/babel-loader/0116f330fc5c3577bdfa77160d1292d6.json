{"ast":null,"code":"\"use strict\";\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nvar impl = utils.implSymbol;\n\nvar HTMLElement = require(\"./HTMLElement.js\");\n\nfunction HTMLImageElement() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.setPrototypeOf(HTMLImageElement.prototype, HTMLElement.interface.prototype);\nObject.setPrototypeOf(HTMLImageElement, HTMLElement.interface);\nObject.defineProperty(HTMLImageElement, \"prototype\", {\n  value: HTMLImageElement.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\nObject.defineProperty(HTMLImageElement.prototype, \"alt\", {\n  get: function get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    var value = this.getAttribute(\"alt\");\n    return value === null ? \"\" : value;\n  },\n  set: function set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'alt' property on 'HTMLImageElement': The provided value\"\n    });\n    this.setAttribute(\"alt\", V);\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLImageElement.prototype, \"src\", {\n  get: function get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"src\"];\n  },\n  set: function set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"USVString\"](V, {\n      context: \"Failed to set the 'src' property on 'HTMLImageElement': The provided value\"\n    });\n    this[impl][\"src\"] = V;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLImageElement.prototype, \"srcset\", {\n  get: function get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"srcset\"];\n  },\n  set: function set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"USVString\"](V, {\n      context: \"Failed to set the 'srcset' property on 'HTMLImageElement': The provided value\"\n    });\n    this[impl][\"srcset\"] = V;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLImageElement.prototype, \"sizes\", {\n  get: function get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    var value = this.getAttribute(\"sizes\");\n    return value === null ? \"\" : value;\n  },\n  set: function set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'sizes' property on 'HTMLImageElement': The provided value\"\n    });\n    this.setAttribute(\"sizes\", V);\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLImageElement.prototype, \"crossOrigin\", {\n  get: function get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    var value = this.getAttribute(\"crossOrigin\");\n    return value === null ? \"\" : value;\n  },\n  set: function set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    if (V === null || V === undefined) {\n      V = null;\n    } else {\n      V = conversions[\"DOMString\"](V, {\n        context: \"Failed to set the 'crossOrigin' property on 'HTMLImageElement': The provided value\"\n      });\n    }\n\n    this.setAttribute(\"crossOrigin\", V);\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLImageElement.prototype, \"useMap\", {\n  get: function get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    var value = this.getAttribute(\"useMap\");\n    return value === null ? \"\" : value;\n  },\n  set: function set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'useMap' property on 'HTMLImageElement': The provided value\"\n    });\n    this.setAttribute(\"useMap\", V);\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLImageElement.prototype, \"isMap\", {\n  get: function get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this.hasAttribute(\"isMap\");\n  },\n  set: function set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"boolean\"](V, {\n      context: \"Failed to set the 'isMap' property on 'HTMLImageElement': The provided value\"\n    });\n\n    if (V) {\n      this.setAttribute(\"isMap\", \"\");\n    } else {\n      this.removeAttribute(\"isMap\");\n    }\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLImageElement.prototype, \"width\", {\n  get: function get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"width\"];\n  },\n  set: function set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"unsigned long\"](V, {\n      context: \"Failed to set the 'width' property on 'HTMLImageElement': The provided value\"\n    });\n    this[impl][\"width\"] = V;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLImageElement.prototype, \"height\", {\n  get: function get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"height\"];\n  },\n  set: function set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"unsigned long\"](V, {\n      context: \"Failed to set the 'height' property on 'HTMLImageElement': The provided value\"\n    });\n    this[impl][\"height\"] = V;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLImageElement.prototype, \"naturalWidth\", {\n  get: function get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"naturalWidth\"];\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLImageElement.prototype, \"naturalHeight\", {\n  get: function get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"naturalHeight\"];\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLImageElement.prototype, \"complete\", {\n  get: function get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"complete\"];\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLImageElement.prototype, \"currentSrc\", {\n  get: function get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"currentSrc\"];\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLImageElement.prototype, \"name\", {\n  get: function get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    var value = this.getAttribute(\"name\");\n    return value === null ? \"\" : value;\n  },\n  set: function set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'name' property on 'HTMLImageElement': The provided value\"\n    });\n    this.setAttribute(\"name\", V);\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLImageElement.prototype, \"lowsrc\", {\n  get: function get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"lowsrc\"];\n  },\n  set: function set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"USVString\"](V, {\n      context: \"Failed to set the 'lowsrc' property on 'HTMLImageElement': The provided value\"\n    });\n    this[impl][\"lowsrc\"] = V;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLImageElement.prototype, \"align\", {\n  get: function get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    var value = this.getAttribute(\"align\");\n    return value === null ? \"\" : value;\n  },\n  set: function set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'align' property on 'HTMLImageElement': The provided value\"\n    });\n    this.setAttribute(\"align\", V);\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLImageElement.prototype, \"hspace\", {\n  get: function get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    var value = parseInt(this.getAttribute(\"hspace\"));\n    return isNaN(value) || value < 0 || value > 2147483647 ? 0 : value;\n  },\n  set: function set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"unsigned long\"](V, {\n      context: \"Failed to set the 'hspace' property on 'HTMLImageElement': The provided value\"\n    });\n    this.setAttribute(\"hspace\", String(V > 2147483647 ? 0 : V));\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLImageElement.prototype, \"vspace\", {\n  get: function get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    var value = parseInt(this.getAttribute(\"vspace\"));\n    return isNaN(value) || value < 0 || value > 2147483647 ? 0 : value;\n  },\n  set: function set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"unsigned long\"](V, {\n      context: \"Failed to set the 'vspace' property on 'HTMLImageElement': The provided value\"\n    });\n    this.setAttribute(\"vspace\", String(V > 2147483647 ? 0 : V));\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLImageElement.prototype, \"longDesc\", {\n  get: function get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"longDesc\"];\n  },\n  set: function set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"USVString\"](V, {\n      context: \"Failed to set the 'longDesc' property on 'HTMLImageElement': The provided value\"\n    });\n    this[impl][\"longDesc\"] = V;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLImageElement.prototype, \"border\", {\n  get: function get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    var value = this.getAttribute(\"border\");\n    return value === null ? \"\" : value;\n  },\n  set: function set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = conversions[\"DOMString\"](V, {\n      context: \"Failed to set the 'border' property on 'HTMLImageElement': The provided value\",\n      treatNullAsEmptyString: true\n    });\n    this.setAttribute(\"border\", V);\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(HTMLImageElement.prototype, Symbol.toStringTag, {\n  value: \"HTMLImageElement\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nvar iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is: function is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = module.exports._mixedIntoPredicates[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var isMixedInto = _step.value;\n\n          if (isMixedInto(obj)) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n\n    return false;\n  },\n  isImpl: function isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      var wrapper = utils.wrapperForImpl(obj);\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = module.exports._mixedIntoPredicates[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var isMixedInto = _step2.value;\n\n          if (isMixedInto(wrapper)) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n\n    return false;\n  },\n  convert: function convert(obj) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$context = _ref.context,\n        context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(\"\".concat(context, \" is not of type 'HTMLImageElement'.\"));\n  },\n  create: function create(constructorArgs, privateData) {\n    var obj = Object.create(HTMLImageElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl: function createImpl(constructorArgs, privateData) {\n    var obj = Object.create(HTMLImageElement.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup: function _internalSetup(obj) {\n    HTMLElement._internalSetup(obj);\n  },\n  setup: function setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n  interface: HTMLImageElement,\n  expose: {\n    Window: {\n      HTMLImageElement: HTMLImageElement\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nvar Impl = require(\"../nodes/HTMLImageElement-impl.js\");","map":null,"metadata":{},"sourceType":"script"}