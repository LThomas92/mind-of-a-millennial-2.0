{"ast":null,"code":"// moment.js language configuration\n// language : Lithuanian (lt)\n// author : Mindaugas Mozūras : https://github.com/mmozuras\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['moment'], factory); // AMD\n  } else if (typeof exports === 'object') {\n    module.exports = factory(require('../moment')); // Node\n  } else {\n    factory(window.moment); // Browser global\n  }\n})(function (moment) {\n  var units = {\n    \"m\": \"minutė_minutės_minutę\",\n    \"mm\": \"minutės_minučių_minutes\",\n    \"h\": \"valanda_valandos_valandą\",\n    \"hh\": \"valandos_valandų_valandas\",\n    \"d\": \"diena_dienos_dieną\",\n    \"dd\": \"dienos_dienų_dienas\",\n    \"M\": \"mėnuo_mėnesio_mėnesį\",\n    \"MM\": \"mėnesiai_mėnesių_mėnesius\",\n    \"y\": \"metai_metų_metus\",\n    \"yy\": \"metai_metų_metus\"\n  },\n      weekDays = \"pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis_sekmadienis\".split(\"_\");\n\n  function translateSeconds(number, withoutSuffix, key, isFuture) {\n    if (withoutSuffix) {\n      return \"kelios sekundės\";\n    } else {\n      return isFuture ? \"kelių sekundžių\" : \"kelias sekundes\";\n    }\n  }\n\n  function translateSingular(number, withoutSuffix, key, isFuture) {\n    return withoutSuffix ? forms(key)[0] : isFuture ? forms(key)[1] : forms(key)[2];\n  }\n\n  function special(number) {\n    return number % 10 === 0 || number > 10 && number < 20;\n  }\n\n  function forms(key) {\n    return units[key].split(\"_\");\n  }\n\n  function translate(number, withoutSuffix, key, isFuture) {\n    var result = number + \" \";\n\n    if (number === 1) {\n      return result + translateSingular(number, withoutSuffix, key[0], isFuture);\n    } else if (withoutSuffix) {\n      return result + (special(number) ? forms(key)[1] : forms(key)[0]);\n    } else {\n      if (isFuture) {\n        return result + forms(key)[1];\n      } else {\n        return result + (special(number) ? forms(key)[1] : forms(key)[2]);\n      }\n    }\n  }\n\n  function relativeWeekDay(moment, format) {\n    var nominative = format.indexOf('dddd LT') === -1,\n        weekDay = weekDays[moment.weekday()];\n    return nominative ? weekDay : weekDay.substring(0, weekDay.length - 2) + \"į\";\n  }\n\n  return moment.lang(\"lt\", {\n    months: \"sausio_vasario_kovo_balandžio_gegužės_biržėlio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio\".split(\"_\"),\n    monthsShort: \"sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd\".split(\"_\"),\n    weekdays: relativeWeekDay,\n    weekdaysShort: \"Sek_Pir_Ant_Tre_Ket_Pen_Šeš\".split(\"_\"),\n    weekdaysMin: \"S_P_A_T_K_Pn_Š\".split(\"_\"),\n    longDateFormat: {\n      LT: \"HH:mm\",\n      L: \"YYYY-MM-DD\",\n      LL: \"YYYY [m.] MMMM D [d.]\",\n      LLL: \"YYYY [m.] MMMM D [d.], LT [val.]\",\n      LLLL: \"YYYY [m.] MMMM D [d.], dddd, LT [val.]\",\n      l: \"YYYY-MM-DD\",\n      ll: \"YYYY [m.] MMMM D [d.]\",\n      lll: \"YYYY [m.] MMMM D [d.], LT [val.]\",\n      llll: \"YYYY [m.] MMMM D [d.], ddd, LT [val.]\"\n    },\n    calendar: {\n      sameDay: \"[Šiandien] LT\",\n      nextDay: \"[Rytoj] LT\",\n      nextWeek: \"dddd LT\",\n      lastDay: \"[Vakar] LT\",\n      lastWeek: \"[Praėjusį] dddd LT\",\n      sameElse: \"L\"\n    },\n    relativeTime: {\n      future: \"po %s\",\n      past: \"prieš %s\",\n      s: translateSeconds,\n      m: translateSingular,\n      mm: translate,\n      h: translateSingular,\n      hh: translate,\n      d: translateSingular,\n      dd: translate,\n      M: translateSingular,\n      MM: translate,\n      y: translateSingular,\n      yy: translate\n    },\n    ordinal: function ordinal(number) {\n      return number + '-oji';\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  });\n});","map":null,"metadata":{},"sourceType":"script"}