{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _draftJsButtons = require('draft-js-buttons');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* eslint-disable react/no-array-index-key */\n\n\nvar Toolbar = function (_React$Component) {\n  _inherits(Toolbar, _React$Component);\n\n  function Toolbar() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Toolbar);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Toolbar.__proto__ || Object.getPrototypeOf(Toolbar)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      /**\n       * If this is set, the toolbar will render this instead of the regular\n       * structure and will also be shown when the editor loses focus.\n       * @type {Component}\n       */\n      overrideContent: undefined // componentWillMount() {\n      //   this.props.store.subscribeToItem('selection', () => this.forceUpdate());\n      // }\n      // componentWillUnmount() {\n      //   this.props.store.unsubscribeFromItem('selection', () => this.forceUpdate());\n      // }\n\n      /**\n       * This can be called by a child in order to render custom content instead\n       * of the regular structure. It's the responsibility of the callee to call\n       * this function again with `undefined` in order to reset `overrideContent`.\n       * @param {Component} overrideContent\n       */\n\n    }, _this.onOverrideContent = function (overrideContent) {\n      return _this.setState({\n        overrideContent: overrideContent\n      });\n    }, _this.renderDefaultButtons = function (externalProps) {\n      return _react2.default.createElement('div', null, _react2.default.createElement(_draftJsButtons.ItalicButton, externalProps), _react2.default.createElement(_draftJsButtons.BoldButton, externalProps), _react2.default.createElement(_draftJsButtons.UnderlineButton, externalProps), _react2.default.createElement(_draftJsButtons.CodeButton, externalProps));\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Toolbar, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          theme = _props.theme,\n          store = _props.store;\n      var OverrideContent = this.state.overrideContent;\n      var childrenProps = {\n        theme: theme.buttonStyles,\n        getEditorState: store.getItem('getEditorState'),\n        setEditorState: store.getItem('setEditorState'),\n        onOverrideContent: this.onOverrideContent\n      };\n      return _react2.default.createElement('div', {\n        className: theme.toolbarStyles.toolbar\n      }, OverrideContent ? _react2.default.createElement(OverrideContent, childrenProps) : (this.props.children || this.renderDefaultButtons)(childrenProps));\n    }\n  }]);\n\n  return Toolbar;\n}(_react2.default.Component);\n\nToolbar.propTypes = {\n  children: _propTypes2.default.func\n};\nexports.default = Toolbar;","map":null,"metadata":{},"sourceType":"script"}