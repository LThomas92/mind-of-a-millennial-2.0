{"ast":null,"code":"\"use strict\";\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nvar convertEndingType = require(\"./EndingType.js\").convert;\n\nmodule.exports = {\n  convertInherit: function convertInherit(obj, ret) {\n    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref$context = _ref.context,\n        context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n    {\n      var key = \"endings\";\n      var value = obj === undefined || obj === null ? undefined : obj[key];\n\n      if (value !== undefined) {\n        value = convertEndingType(value, {\n          context: context + \" has member endings that\"\n        });\n        ret[key] = value;\n      } else {\n        ret[key] = \"transparent\";\n      }\n    }\n    {\n      var _key = \"type\";\n\n      var _value = obj === undefined || obj === null ? undefined : obj[_key];\n\n      if (_value !== undefined) {\n        _value = conversions[\"DOMString\"](_value, {\n          context: context + \" has member type that\"\n        });\n        ret[_key] = _value;\n      } else {\n        ret[_key] = \"\";\n      }\n    }\n  },\n  convert: function convert(obj) {\n    var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref2$context = _ref2.context,\n        context = _ref2$context === void 0 ? \"The provided value\" : _ref2$context;\n\n    if (obj !== undefined && typeof obj !== \"object\" && typeof obj !== \"function\") {\n      throw new TypeError(\"\".concat(context, \" is not an object.\"));\n    }\n\n    var ret = Object.create(null);\n    module.exports.convertInherit(obj, ret, {\n      context: context\n    });\n    return ret;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}