{"ast":null,"code":"var _jsxFileName = \"/Users/Lawrence/Desktop/mind-of-a-millennial/client/src/components/auth/Register.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\n\nclass Register extends React.Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const newUser = {\n        username: this.state.username,\n        email: this.state.email,\n        password: this.state.password,\n        password2: this.state.password2\n      };\n      this.props.registerUser(newUser, this.props.history);\n    };\n\n    this.onChage = this.onChange.bind(this);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const errors = this.state.errors;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.onChange,\n      value: this.state.username,\n      errors: errors.name,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.onChange,\n      value: this.state.email,\n      error: errors.email,\n      type: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.onChange,\n      value: this.state.password,\n      error: errors.password,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.onChange,\n      value: this.state.password2,\n      error: errors.password2,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Sign Up\")));\n  }\n\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  registerUser\n})(withRouter(Register));","map":{"version":3,"sources":["/Users/Lawrence/Desktop/mind-of-a-millennial/client/src/components/auth/Register.js"],"names":["React","withRouter","PropTypes","connect","registerUser","Register","Component","constructor","onChange","e","setState","target","id","value","onSubmit","preventDefault","newUser","username","state","email","password","password2","props","history","onChage","bind","errors","componentDidMount","auth","isAuthenticated","push","componentWillReceiveProps","nextProps","render","name","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\n\nclass Register extends React.Component {\n  constructor() {\n    super();\n\n    this.onChage = this.onChange.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      username: this.state.username,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.registerUser(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container\">\n        <form noValidate onSubmit={this.onSubmit}>\n          <input\n            onChange={this.onChange}\n            value={this.state.username}\n            errors={errors.name}\n            type=\"text\"\n          />\n          <input\n            onChange={this.onChange}\n            value={this.state.email}\n            error={errors.email}\n            type=\"email\"\n          />\n          <input\n            onChange={this.onChange}\n            value={this.state.password}\n            error={errors.password}\n            type=\"password\"\n          />\n          <input\n            onChange={this.onChange}\n            value={this.state.password2}\n            error={errors.password2}\n            type=\"password\"\n          />\n          <button type=\"submit\">Sign Up</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));\n"]},"metadata":{},"sourceType":"module"}