{"ast":null,"code":"import { ADD_ARTICLE, GET_ARTICLE, GET_ARTICLES, EDIT_ARTICLE, DELETE_ARTICLE, ARTICLE_LOADING, GET_ERRORS, CLEAR_ERRORS } from \"./types\";\nimport { logoutUser } from \"./authActions\";\nimport AxiosAPI from \"../components/AxiosAPI\";\nimport store from \"../store\"; // Add Article\n\nexport const addArticle = articleData => dispatch => {\n  dispatch(clearErrors());\n  AxiosAPI.post(\"api/articles/add\", articleData).then(res => dispatch({\n    type: ADD_ARTICLE,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; //GET ALL ARTICLES\n\nexport const getAllArticles = () => dispatch => {\n  dispatch(setArticleLoading());\n  AxiosAPI.get(\"/api/articles\").then(res => dispatch({\n    type: GET_ARTICLES,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ARTICLES,\n    payload: null\n  }));\n}; //GET ONE ARTICLE\n\nexport const getArticle = id => dispatch => {\n  dispatch(setArticleLoading());\n  AxiosAPI.get(\"/api/articles/show/\".concat(id)).then(res => dispatch({\n    type: GET_ARTICLE,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ARTICLE,\n    payload: null\n  }));\n}; //EDIT ARTICLE\n\nexport const editArticle = (id, articleData) => dispatch => {\n  AxiosAPI.put(\"/api/articles/edit/\".concat(id), articleData).then(res => dispatch({\n    type: EDIT_ARTICLE,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: null\n  }));\n}; //DELETE ARTICLE\n\nexport const deleteArticle = id => dispatch => {\n  AxiosAPI.delete(\"/api/articles/\".concat(id)).then(res => dispatch({\n    type: DELETE_ARTICLE,\n    payload: id\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.res.data\n  }));\n}; //ADD COMMENT TO ARTICLE\n\nexport const addComment = (articleId, commentData) => dispatch => {\n  dispatch(clearErrors());\n  AxiosAPI.post(\"/api/articles/comment/\".concat(articleId), commentData).then(res => dispatch({\n    type: GET_ARTICLE,\n    payload: res.data\n  })).catch(err => {\n    if (err.response.status === 401) {\n      store.dispatch(logoutUser());\n      window.location.href = \"/login\";\n    } else {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    }\n  });\n}; //DELETE COMMENT\n\nexport const deleteComment = (articleId, commentId) => dispatch => {\n  if (window.confirm(\"Are you sure? This can not be undone\")) {\n    AxiosAPI.delete(\"/api/articles/comment/\".concat(articleId, \"/\").concat(commentId)).then(res => dispatch({\n      type: GET_ARTICLE,\n      payload: res.data\n    })).catch(err => {\n      if (err.response.status === 401) {\n        store.dispatch(logoutUser());\n        window.location.href = \"/login\";\n      } else {\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        });\n      }\n    });\n  }\n}; // Set loading state\n\nexport const setArticleLoading = () => {\n  return {\n    type: ARTICLE_LOADING\n  };\n}; // Clear errors\n\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};","map":{"version":3,"sources":["/Users/Lawrence/Desktop/mind-of-a-millennial/client/src/actions/articleActions.js"],"names":["ADD_ARTICLE","GET_ARTICLE","GET_ARTICLES","EDIT_ARTICLE","DELETE_ARTICLE","ARTICLE_LOADING","GET_ERRORS","CLEAR_ERRORS","logoutUser","AxiosAPI","store","addArticle","articleData","dispatch","clearErrors","post","then","res","type","payload","data","catch","err","response","getAllArticles","setArticleLoading","get","getArticle","id","editArticle","put","deleteArticle","delete","addComment","articleId","commentData","status","window","location","href","deleteComment","commentId","confirm"],"mappings":"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","sourcesContent":["import {\n  ADD_ARTICLE,\n  GET_ARTICLE,\n  GET_ARTICLES,\n  EDIT_ARTICLE,\n  DELETE_ARTICLE,\n  ARTICLE_LOADING,\n  GET_ERRORS,\n  CLEAR_ERRORS\n} from \"./types\";\nimport { logoutUser } from \"./authActions\";\nimport AxiosAPI from \"../components/AxiosAPI\";\nimport store from \"../store\";\n\n// Add Article\nexport const addArticle = articleData => dispatch => {\n  dispatch(clearErrors());\n  AxiosAPI.post(\"api/articles/add\", articleData)\n    .then(res =>\n      dispatch({\n        type: ADD_ARTICLE,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n//GET ALL ARTICLES\nexport const getAllArticles = () => dispatch => {\n  dispatch(setArticleLoading());\n  AxiosAPI.get(\"/api/articles\")\n    .then(res =>\n      dispatch({\n        type: GET_ARTICLES,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ARTICLES,\n        payload: null\n      })\n    );\n};\n//GET ONE ARTICLE\nexport const getArticle = id => dispatch => {\n  dispatch(setArticleLoading());\n  AxiosAPI.get(`/api/articles/show/${id}`)\n    .then(res =>\n      dispatch({\n        type: GET_ARTICLE,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ARTICLE,\n        payload: null\n      })\n    );\n};\n\n//EDIT ARTICLE\nexport const editArticle = (id, articleData) => dispatch => {\n  AxiosAPI.put(`/api/articles/edit/${id}`, articleData)\n    .then(res =>\n      dispatch({\n        type: EDIT_ARTICLE,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: null\n      })\n    );\n};\n\n//DELETE ARTICLE\nexport const deleteArticle = id => dispatch => {\n  AxiosAPI.delete(`/api/articles/${id}`)\n    .then(res =>\n      dispatch({\n        type: DELETE_ARTICLE,\n        payload: id\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.res.data\n      })\n    );\n};\n\n//ADD COMMENT TO ARTICLE\nexport const addComment = (articleId, commentData) => dispatch => {\n  dispatch(clearErrors());\n  AxiosAPI.post(`/api/articles/comment/${articleId}`, commentData)\n    .then(res =>\n      dispatch({\n        type: GET_ARTICLE,\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      if (err.response.status === 401) {\n        store.dispatch(logoutUser());\n        window.location.href = \"/login\";\n      } else {\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        });\n      }\n    });\n};\n\n//DELETE COMMENT\nexport const deleteComment = (articleId, commentId) => dispatch => {\n  if (window.confirm(\"Are you sure? This can not be undone\")) {\n    AxiosAPI.delete(`/api/articles/comment/${articleId}/${commentId}`)\n      .then(res =>\n        dispatch({\n          type: GET_ARTICLE,\n          payload: res.data\n        })\n      )\n      .catch(err => {\n        if (err.response.status === 401) {\n          store.dispatch(logoutUser());\n          window.location.href = \"/login\";\n        } else {\n          dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n          });\n        }\n      });\n  }\n};\n\n// Set loading state\nexport const setArticleLoading = () => {\n  return {\n    type: ARTICLE_LOADING\n  };\n};\n\n// Clear errors\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};\n"]},"metadata":{},"sourceType":"module"}