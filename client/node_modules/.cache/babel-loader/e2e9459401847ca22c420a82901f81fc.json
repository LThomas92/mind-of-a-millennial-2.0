{"ast":null,"code":"var _jsxFileName = \"/Users/Lawrence/Desktop/mind-of-a-millennial/client/src/components/articles/ArticleForm.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport { addArticle } from \"../../actions/articleActions\";\nimport ImageUpload from \"../ImageUpload\";\nimport AxiosAPI from \"../AxiosAPI\";\n\nclass ArticleForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: \"\",\n      image: \"\",\n      imgSource: \"\",\n      text: \"\"\n    };\n\n    this.imagesHandler = e => {\n      const files = Array.from(e.target.files);\n      const formData = new FormData();\n      const types = [\"image/png\", \"image/jpeg\", \"image/gif\"];\n      const config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\"\n        }\n      };\n      files.forEach((file, i) => {\n        if (types.every(type => file.type !== type)) {\n          this.setState({\n            errors: \"\\\"\".concat(file.type, \"\\\" is not a supported format\")\n          });\n        }\n\n        if (file.size > 150000) {\n          this.setState({\n            errors: \"\\\"\".concat(file.name, \"\\\" is too large, please upload a smaller picture\")\n          });\n        }\n\n        formData.append(i, file);\n      });\n      AxiosAPI.post(\"api/articles/add\", formData, config).then(images => {\n        // const { fileName, filePath } = res.data;\n        this.setState({\n          image: images\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault(); // const { user } = this.props.auth;\n\n      const newArticle = {\n        name: this.state.name,\n        price: this.state.price,\n        description: this.state.description\n      };\n      this.props.addArticle(newArticle, this.props.history);\n      this.setState({\n        title: \"\",\n        image: \"\",\n        imgSource: \"\",\n        text: \"\"\n      });\n    };\n\n    this.handleEditorChange = content => {\n      this.setState({\n        text: content\n      });\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps) {\n      this.setState({\n        errors: newProps.errors\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.onSubmit,\n      encType: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form__group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Article Title\",\n      onChange: this.onChange,\n      className: \"form__input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form__group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form__label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Upload Image\"), React.createElement(ImageUpload, {\n      imagesHandler: this.imagesHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form__group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Image Source\",\n      onChange: this.onChange,\n      className: \"form__input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form__group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Editor, {\n      apiKey: \"rjadl5gyw4unfkgc83yjhwi2r89t35m1z43bun15yohisplr\",\n      init: {\n        plugins: \"advlist autolink autoresize lists link image charmap print\"\n      },\n      value: this.state.text,\n      className: \"form__input\",\n      onEditorChange: this.handleEditorChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"submit-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nArticleForm.propTypes = {\n  addProduct: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  addArticle\n})(ArticleForm);","map":{"version":3,"sources":["/Users/Lawrence/Desktop/mind-of-a-millennial/client/src/components/articles/ArticleForm.js"],"names":["React","PropTypes","connect","Editor","addArticle","ImageUpload","AxiosAPI","ArticleForm","Component","state","title","image","imgSource","text","imagesHandler","e","files","Array","from","target","formData","FormData","types","config","headers","forEach","file","i","every","type","setState","errors","size","name","append","post","then","images","catch","err","console","log","onChange","value","onSubmit","preventDefault","newArticle","price","description","props","history","handleEditorChange","content","componentWillReceiveProps","newProps","render","plugins","propTypes","addProduct","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport { addArticle } from \"../../actions/articleActions\";\nimport ImageUpload from \"../ImageUpload\";\nimport AxiosAPI from \"../AxiosAPI\";\n\nclass ArticleForm extends React.Component {\n  state = {\n    title: \"\",\n    image: \"\",\n    imgSource: \"\",\n    text: \"\"\n  };\n\n  imagesHandler = e => {\n    const files = Array.from(e.target.files);\n\n    const formData = new FormData();\n    const types = [\"image/png\", \"image/jpeg\", \"image/gif\"];\n\n    const config = { headers: { \"content-type\": \"multipart/form-data\" } };\n\n    files.forEach((file, i) => {\n      if (types.every(type => file.type !== type)) {\n        this.setState({ errors: `\"${file.type}\" is not a supported format` });\n      }\n\n      if (file.size > 150000) {\n        this.setState({\n          errors: `\"${file.name}\" is too large, please upload a smaller picture`\n        });\n      }\n\n      formData.append(i, file);\n    });\n\n    AxiosAPI.post(\"api/articles/add\", formData, config)\n      .then(images => {\n        // const { fileName, filePath } = res.data;\n        this.setState({ image: images });\n      })\n      .catch(err => console.log(err));\n  };\n\n  componentWillReceiveProps(newProps) {\n    if (newProps) {\n      this.setState({ errors: newProps.errors });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    // const { user } = this.props.auth;\n\n    const newArticle = {\n      name: this.state.name,\n      price: this.state.price,\n      description: this.state.description\n    };\n\n    this.props.addArticle(newArticle, this.props.history);\n\n    this.setState({\n      title: \"\",\n      image: \"\",\n      imgSource: \"\",\n      text: \"\"\n    });\n  };\n\n  handleEditorChange = content => {\n    this.setState({ text: content });\n  };\n\n  render() {\n    return (\n      <div className=\"form-container\">\n        <div className=\"login\">\n          <form\n            className=\"form\"\n            onSubmit={this.onSubmit}\n            encType=\"multipart/form-data\"\n          >\n            <div className=\"form__group\">\n              <input\n                type=\"text\"\n                placeholder=\"Enter Article Title\"\n                onChange={this.onChange}\n                className=\"form__input\"\n              />\n            </div>\n            <div className=\"form__group\">\n              <label className=\"form__label\">Upload Image</label>\n              <ImageUpload imagesHandler={this.imagesHandler} />\n            </div>\n            <div className=\"form__group\">\n              <input\n                type=\"text\"\n                placeholder=\"Enter Image Source\"\n                onChange={this.onChange}\n                className=\"form__input\"\n              />\n            </div>\n\n            <div className=\"form__group\">\n              <Editor\n                apiKey=\"rjadl5gyw4unfkgc83yjhwi2r89t35m1z43bun15yohisplr\"\n                init={{\n                  plugins:\n                    \"advlist autolink autoresize lists link image charmap print\"\n                }}\n                value={this.state.text}\n                className=\"form__input\"\n                onEditorChange={this.handleEditorChange}\n              />\n            </div>\n            <button type=\"submit\" className=\"submit-btn\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nArticleForm.propTypes = {\n  addProduct: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { addArticle }\n)(ArticleForm);\n"]},"metadata":{},"sourceType":"module"}