{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/inherits\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nvar resourceLoader = require(\"../../browser/resource-loader\");\n\nvar _require = require(\"../../utils\"),\n    Canvas = _require.Canvas,\n    reflectURLAttribute = _require.reflectURLAttribute;\n\nvar HTMLImageElementImpl =\n/*#__PURE__*/\nfunction (_HTMLElementImpl) {\n  _inherits(HTMLImageElementImpl, _HTMLElementImpl);\n\n  function HTMLImageElementImpl() {\n    _classCallCheck(this, HTMLImageElementImpl);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(HTMLImageElementImpl).apply(this, arguments));\n  }\n\n  _createClass(HTMLImageElementImpl, [{\n    key: \"_attrModified\",\n    value: function _attrModified(name, value, oldVal) {\n      var _this = this;\n\n      if (name === \"src\" && value !== oldVal) {\n        var document = this._ownerDocument;\n\n        if (Canvas && document.implementation._hasFeature(\"FetchExternalResources\", \"img\")) {\n          var error;\n\n          if (!this._image) {\n            this._image = new Canvas.Image(); // Install an error handler that just remembers the error. It is then\n            // thrown in the callback of resourceLoader.load() below.\n\n            this._image.onerror = function (err) {\n              error = err;\n            };\n          }\n\n          this._currentSrc = null;\n\n          if (this.hasAttribute(\"src\")) {\n            resourceLoader.load(this, this.src, {}, function (data, url, response) {\n              if (response && response.statusCode !== undefined && response.statusCode !== 200) {\n                throw new Error(\"Status code: \" + response.statusCode);\n              }\n\n              error = null;\n              _this._image.source = data;\n\n              if (error) {\n                throw new Error(error);\n              }\n\n              _this._currentSrc = value;\n            });\n          } else {\n            this._image.source = undefined;\n          }\n        }\n      }\n\n      _get(_getPrototypeOf(HTMLImageElementImpl.prototype), \"_attrModified\", this).call(this, name, value, oldVal);\n    }\n  }, {\n    key: \"_accept\",\n    get: function get() {\n      return \"image/png,image/*;q=0.8,*/*;q=0.5\";\n    }\n  }, {\n    key: \"src\",\n    get: function get() {\n      return reflectURLAttribute(this, \"src\");\n    },\n    set: function set(value) {\n      this.setAttribute(\"src\", value);\n    }\n  }, {\n    key: \"srcset\",\n    get: function get() {\n      return conversions.USVString(this.getAttribute(\"srcset\"));\n    },\n    set: function set(value) {\n      this.setAttribute(\"srcset\", value);\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      // Just like on browsers, if no width / height is defined, we fall back on the\n      // dimensions of the internal image data.\n      return this.hasAttribute(\"height\") ? conversions[\"unsigned long\"](this.getAttribute(\"height\")) : this.naturalHeight;\n    },\n    set: function set(V) {\n      this.setAttribute(\"height\", String(V));\n    }\n  }, {\n    key: \"width\",\n    get: function get() {\n      return this.hasAttribute(\"width\") ? conversions[\"unsigned long\"](this.getAttribute(\"width\")) : this.naturalWidth;\n    },\n    set: function set(V) {\n      this.setAttribute(\"width\", String(V));\n    }\n  }, {\n    key: \"naturalHeight\",\n    get: function get() {\n      return this._image ? this._image.height : 0;\n    }\n  }, {\n    key: \"naturalWidth\",\n    get: function get() {\n      return this._image ? this._image.width : 0;\n    }\n  }, {\n    key: \"complete\",\n    get: function get() {\n      return Boolean(this._image && this._image.complete);\n    }\n  }, {\n    key: \"currentSrc\",\n    get: function get() {\n      return this._currentSrc || \"\";\n    }\n  }, {\n    key: \"lowsrc\",\n    get: function get() {\n      return reflectURLAttribute(this, \"lowsrc\");\n    },\n    set: function set(value) {\n      this.setAttribute(\"lowsrc\", value);\n    }\n  }, {\n    key: \"longDesc\",\n    get: function get() {\n      return reflectURLAttribute(this, \"longdesc\");\n    },\n    set: function set(value) {\n      this.setAttribute(\"longdesc\", value);\n    }\n  }]);\n\n  return HTMLImageElementImpl;\n}(HTMLElementImpl);\n\nmodule.exports = {\n  implementation: HTMLImageElementImpl\n};","map":null,"metadata":{},"sourceType":"script"}