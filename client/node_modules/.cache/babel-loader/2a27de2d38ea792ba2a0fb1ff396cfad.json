{"ast":null,"code":"\"use strict\";\n\nvar xnv = require(\"xml-name-validator\");\n\nvar DOMException = require(\"domexception\");\n\nvar _require = require(\"../helpers/namespaces\"),\n    XML_NS = _require.XML_NS,\n    XMLNS_NS = _require.XMLNS_NS; // https://dom.spec.whatwg.org/#validate\n\n\nexports.name = function (name) {\n  var result = xnv.name(name);\n\n  if (!result.success) {\n    throw new DOMException(\"\\\"\" + name + \"\\\" did not match the Name production: \" + result.error, \"InvalidCharacterError\");\n  }\n};\n\nexports.qname = function (qname) {\n  exports.name(qname);\n  var result = xnv.qname(qname);\n\n  if (!result.success) {\n    throw new DOMException(\"\\\"\" + qname + \"\\\" did not match the QName production: \" + result.error, \"InvalidCharacterError\");\n  }\n};\n\nexports.validateAndExtract = function (namespace, qualifiedName) {\n  if (namespace === \"\") {\n    namespace = null;\n  }\n\n  exports.qname(qualifiedName);\n  var prefix = null;\n  var localName = qualifiedName;\n  var colonIndex = qualifiedName.indexOf(\":\");\n\n  if (colonIndex !== -1) {\n    prefix = qualifiedName.substring(0, colonIndex);\n    localName = qualifiedName.substring(colonIndex + 1);\n  }\n\n  if (prefix !== null && namespace === null) {\n    throw new DOMException(\"A namespace was given but a prefix was also extracted from the qualifiedName\", \"NamespaceError\");\n  }\n\n  if (prefix === \"xml\" && namespace !== XML_NS) {\n    throw new DOMException(\"A prefix of \\\"xml\\\" was given but the namespace was not the XML namespace\", \"NamespaceError\");\n  }\n\n  if ((qualifiedName === \"xmlns\" || prefix === \"xmlns\") && namespace !== XMLNS_NS) {\n    throw new DOMException(\"A prefix or qualifiedName of \\\"xmlns\\\" was given but the namespace was not the XMLNS \" + \"namespace\", \"NamespaceError\");\n  }\n\n  if (namespace === XMLNS_NS && qualifiedName !== \"xmlns\" && prefix !== \"xmlns\") {\n    throw new DOMException(\"The XMLNS namespace was given but neither the prefix nor qualifiedName was \\\"xmlns\\\"\", \"NamespaceError\");\n  }\n\n  return {\n    namespace: namespace,\n    prefix: prefix,\n    localName: localName\n  };\n};","map":null,"metadata":{},"sourceType":"script"}