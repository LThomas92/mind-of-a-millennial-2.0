{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\n\nexports.default = unionClassNames;\n/**\n * Returns the union of the passed-in arrays: the list of unique items, in order,\n * that are present in one or more of the arrays.\n *\n * @param {...array} arrs - at least two iterable objects must be provide\n */\n\nvar union = function union() {\n  for (var _len = arguments.length, arrs = Array(_len), _key = 0; _key < _len; _key++) {\n    arrs[_key] = arguments[_key];\n  }\n\n  if (arrs) {\n    var _ret = function () {\n      var result = [];\n      arrs.forEach(function (arr) {\n        if (arr) {\n          arr.forEach(function (obj) {\n            if (result.indexOf(obj) < 0) {\n              result.push(obj);\n            }\n          });\n        }\n      });\n      return {\n        v: result\n      };\n    }();\n\n    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n  }\n\n  return undefined;\n};\n/**\n * Returns a string containing all classes without duplicates.\n *\n * @param existingClassNames {String} - one or multiple classes\n * @param additionalClassNames {String} - one or multiple classes\n *\n * @example\n * // returns 'style-id-23 button buy-button'\n * unionClassNames('style-id-23 button', 'button buy-button')\n *\n * Originally inspired by https://github.com/rackt/react-autocomplete/blob/master/lib/union-class-names.js\n */\n\n\nfunction unionClassNames(existingClassNames, additionalClassNames) {\n  if (!existingClassNames && !additionalClassNames) return '';\n  if (!existingClassNames) return additionalClassNames;\n  if (!additionalClassNames) return existingClassNames;\n  return union(existingClassNames.split(' '), additionalClassNames.split(' ')).join(' ');\n}","map":null,"metadata":{},"sourceType":"script"}