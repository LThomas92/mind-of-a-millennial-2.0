{"ast":null,"code":"\"use strict\";\n\nvar _require = require(\"./utils.js\"),\n    removeLeadingAndTrailingHTTPWhitespace = _require.removeLeadingAndTrailingHTTPWhitespace,\n    removeTrailingHTTPWhitespace = _require.removeTrailingHTTPWhitespace,\n    isHTTPWhitespaceChar = _require.isHTTPWhitespaceChar,\n    solelyContainsHTTPTokenCodePoints = _require.solelyContainsHTTPTokenCodePoints,\n    soleyContainsHTTPQuotedStringTokenCodePoints = _require.soleyContainsHTTPQuotedStringTokenCodePoints,\n    asciiLowercase = _require.asciiLowercase;\n\nmodule.exports = function (input) {\n  input = removeLeadingAndTrailingHTTPWhitespace(input);\n  var position = 0;\n  var type = \"\";\n\n  while (position < input.length && input[position] !== \"/\") {\n    type += input[position];\n    ++position;\n  }\n\n  if (type.length === 0 || !solelyContainsHTTPTokenCodePoints(type)) {\n    return null;\n  }\n\n  if (position >= input.length) {\n    return null;\n  } // Skips past \"/\"\n\n\n  ++position;\n  var subtype = \"\";\n\n  while (position < input.length && input[position] !== \";\") {\n    subtype += input[position];\n    ++position;\n  }\n\n  subtype = removeTrailingHTTPWhitespace(subtype);\n\n  if (subtype.length === 0 || !solelyContainsHTTPTokenCodePoints(subtype)) {\n    return null;\n  }\n\n  var mimeType = {\n    type: asciiLowercase(type),\n    subtype: asciiLowercase(subtype),\n    parameters: new Map()\n  };\n\n  while (position < input.length) {\n    // Skip past \";\"\n    ++position;\n\n    while (isHTTPWhitespaceChar(input[position])) {\n      ++position;\n    }\n\n    var parameterName = \"\";\n\n    while (position < input.length && input[position] !== \";\" && input[position] !== \"=\") {\n      parameterName += input[position];\n      ++position;\n    }\n\n    parameterName = asciiLowercase(parameterName);\n\n    if (position < input.length) {\n      if (input[position] === \";\") {\n        continue;\n      } // Skip past \"=\"\n\n\n      ++position;\n    }\n\n    var parameterValue = \"\";\n\n    if (input[position] === \"\\\"\") {\n      ++position;\n\n      while (true) {\n        while (position < input.length && input[position] !== \"\\\"\" && input[position] !== \"\\\\\") {\n          parameterValue += input[position];\n          ++position;\n        }\n\n        if (position < input.length && input[position] === \"\\\\\") {\n          ++position;\n\n          if (position < input.length) {\n            parameterValue += input[position];\n            ++position;\n            continue;\n          } else {\n            parameterValue += \"\\\\\";\n            break;\n          }\n        } else {\n          break;\n        }\n      }\n\n      while (position < input.length && input[position] !== \";\") {\n        ++position;\n      }\n    } else {\n      while (position < input.length && input[position] !== \";\") {\n        parameterValue += input[position];\n        ++position;\n      }\n\n      parameterValue = removeTrailingHTTPWhitespace(parameterValue);\n\n      if (parameterValue === \"\") {\n        continue;\n      }\n    }\n\n    if (parameterName.length > 0 && solelyContainsHTTPTokenCodePoints(parameterName) && soleyContainsHTTPQuotedStringTokenCodePoints(parameterValue) && !mimeType.parameters.has(parameterName)) {\n      mimeType.parameters.set(parameterName, parameterValue);\n    }\n  }\n\n  return mimeType;\n};","map":null,"metadata":{},"sourceType":"script"}