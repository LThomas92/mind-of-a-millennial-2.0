{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/helpers/inherits\");\n\nvar Event = require(\"../generated/Event.js\");\n\nvar HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nvar HTMLDetailsElementImpl =\n/*#__PURE__*/\nfunction (_HTMLElementImpl) {\n  _inherits(HTMLDetailsElementImpl, _HTMLElementImpl);\n\n  function HTMLDetailsElementImpl(args, privateData) {\n    var _this;\n\n    _classCallCheck(this, HTMLDetailsElementImpl);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HTMLDetailsElementImpl).call(this, args, privateData));\n    _this._taskQueue = null;\n    return _this;\n  }\n\n  _createClass(HTMLDetailsElementImpl, [{\n    key: \"_dispatchToggleEvent\",\n    value: function _dispatchToggleEvent() {\n      this._taskQueue = null;\n\n      this._dispatch(Event.createImpl([\"toggle\", {\n        bubbles: false,\n        cancelable: false\n      }], {\n        isTrusted: true\n      }));\n    }\n  }, {\n    key: \"_attrModified\",\n    value: function _attrModified(name, value, oldValue) {\n      _get(_getPrototypeOf(HTMLDetailsElementImpl.prototype), \"_attrModified\", this).call(this, name, value, oldValue);\n\n      if (name === \"open\" && this._taskQueue === null) {\n        // Check that the attribute is added or removed, not merely changed\n        if (value !== oldValue && value !== null && oldValue === null || value === null && oldValue !== null) {\n          this._taskQueue = setTimeout(this._dispatchToggleEvent.bind(this), 0);\n        }\n      }\n    }\n  }]);\n\n  return HTMLDetailsElementImpl;\n}(HTMLElementImpl);\n\nmodule.exports = {\n  implementation: HTMLDetailsElementImpl\n};","map":null,"metadata":{},"sourceType":"script"}