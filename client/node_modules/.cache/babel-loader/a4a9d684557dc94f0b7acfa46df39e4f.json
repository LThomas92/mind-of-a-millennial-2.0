{"ast":null,"code":"var _jsxFileName = \"/Users/Lawrence/Desktop/mind-of-a-millennial/client/src/components/auth/LoginForm.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport propTypes from \"prop-types\";\nimport { resetPassword } from \"../../actions/authActions\";\n\nclass ChangePassword extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeEmail = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.onChangeCurrentPassword = e => {\n      this.setState({\n        currentPassword: e.target.value\n      });\n    };\n\n    this.onChangeNewPassword = e => {\n      this.setState({\n        newPassword: e.target.value\n      });\n    };\n\n    this.onChangeNewPasswordConfirm = e => {\n      this.setState({\n        confirmNewPassword: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const resetData = {\n        email: this.state.email,\n        currentPassword: this.state.passwordChange,\n        newPassword: this.state.newPasswordChange,\n        confirmNewPassword: this.state.confirmNewPasswordChange\n      };\n      this.props.resetPassword(resetData);\n    };\n\n    this.state = {\n      email: \"\",\n      currentPassword: \"\",\n      newPassword: \"\",\n      confirmNewPassword: \"\",\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const errors = this.props.errors;\n    console.log(errors);\n    return React.createElement(\"section\", {\n      className: \"section-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login__form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"u-center-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Change Your Password\"), React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form__label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Email Address\"), React.createElement(\"div\", {\n      className: \"form__group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form__input\",\n      type: \"text\",\n      placeholder: \"Email Address\",\n      value: this.state.email,\n      onChange: this.onChangeEmail,\n      error: errors.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      className: \"form__label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Current Password\"), React.createElement(\"div\", {\n      className: \"form__group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form__input\",\n      type: \"password\",\n      placeholder: \"Current Password\",\n      value: this.state.currentPassword,\n      onChange: this.onChangeCurrentPassword,\n      error: errors.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form__group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form__label\",\n      New: true,\n      Password: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"New Password\"), React.createElement(\"input\", {\n      className: \"form__input\",\n      type: \"password\",\n      placeholder: \"New Password\",\n      value: this.state.newPassword,\n      onChange: this.onChangeNewPassword,\n      error: errors.newpassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form__group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form__label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Confirm New Password\"), React.createElement(\"input\", {\n      className: \"form__input\",\n      type: \"password\",\n      placeholder: \"Confirm New Password\",\n      value: this.state.confirmNewPassword,\n      onChange: this.onChangeNewPasswordConfirm,\n      error: errors.confrimNewPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Change Password\",\n      className: \"submit-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nChangePassword.propTypes = {\n  resetPassword: propTypes.func.isRequired,\n  auth: propTypes.object.isRequired,\n  errors: propTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  resetPassword\n})(ChangePassword);","map":{"version":3,"sources":["/Users/Lawrence/Desktop/mind-of-a-millennial/client/src/components/auth/LoginForm.js"],"names":["React","connect","propTypes","resetPassword","ChangePassword","Component","constructor","props","onChangeEmail","e","setState","email","target","value","onChangeCurrentPassword","currentPassword","onChangeNewPassword","newPassword","onChangeNewPasswordConfirm","confirmNewPassword","onSubmit","preventDefault","resetData","state","passwordChange","newPasswordChange","confirmNewPasswordChange","errors","componentWillReceiveProps","nextProps","render","console","log","password","newpassword","confrimNewPassword","func","isRequired","auth","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport propTypes from \"prop-types\";\nimport { resetPassword } from \"../../actions/authActions\";\n\nclass ChangePassword extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      currentPassword: \"\",\n      newPassword: \"\",\n      confirmNewPassword: \"\",\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChangeEmail = e => {\n    this.setState({ email: e.target.value });\n  };\n\n  onChangeCurrentPassword = e => {\n    this.setState({ currentPassword: e.target.value });\n  };\n\n  onChangeNewPassword = e => {\n    this.setState({ newPassword: e.target.value });\n  };\n\n  onChangeNewPasswordConfirm = e => {\n    this.setState({ confirmNewPassword: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const resetData = {\n      email: this.state.email,\n      currentPassword: this.state.passwordChange,\n      newPassword: this.state.newPasswordChange,\n      confirmNewPassword: this.state.confirmNewPasswordChange\n    };\n    this.props.resetPassword(resetData);\n  };\n\n  render() {\n    const { errors } = this.props;\n    console.log(errors);\n    return (\n      <section className=\"section-form\">\n        <div className=\"form-container\">\n          <div className=\"login\">\n            <div className=\"login__form\">\n              <h2 className=\"u-center-text\">Change Your Password</h2>\n              <form className=\"form\" onSubmit={this.onSubmit}>\n                <label className=\"form__label\">Email Address</label>\n                <div className=\"form__group\">\n                  <input\n                    className=\"form__input\"\n                    type=\"text\"\n                    placeholder=\"Email Address\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    error={errors.password}\n                  />\n                </div>\n                <label className=\"form__label\">Current Password</label>\n                <div className=\"form__group\">\n                  <input\n                    className=\"form__input\"\n                    type=\"password\"\n                    placeholder=\"Current Password\"\n                    value={this.state.currentPassword}\n                    onChange={this.onChangeCurrentPassword}\n                    error={errors.password}\n                  />\n                </div>\n                <div className=\"form__group\">\n                  <label className=\"form__label\" New Password>\n                    New Password\n                  </label>\n                  <input\n                    className=\"form__input\"\n                    type=\"password\"\n                    placeholder=\"New Password\"\n                    value={this.state.newPassword}\n                    onChange={this.onChangeNewPassword}\n                    error={errors.newpassword}\n                  />\n                </div>\n                <div className=\"form__group\">\n                  <label className=\"form__label\">Confirm New Password</label>\n                  <input\n                    className=\"form__input\"\n                    type=\"password\"\n                    placeholder=\"Confirm New Password\"\n                    value={this.state.confirmNewPassword}\n                    onChange={this.onChangeNewPasswordConfirm}\n                    error={errors.confrimNewPassword}\n                  />\n                </div>\n                <input\n                  type=\"submit\"\n                  value=\"Change Password\"\n                  className=\"submit-btn\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nChangePassword.propTypes = {\n  resetPassword: propTypes.func.isRequired,\n  auth: propTypes.object.isRequired,\n  errors: propTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { resetPassword }\n)(ChangePassword);\n"]},"metadata":{},"sourceType":"module"}