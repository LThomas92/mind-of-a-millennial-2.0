{"ast":null,"code":"//.CommonJS\nvar CSSOM = {\n  CSSStyleSheet: require(\"./CSSStyleSheet\").CSSStyleSheet,\n  CSSStyleRule: require(\"./CSSStyleRule\").CSSStyleRule,\n  CSSMediaRule: require(\"./CSSMediaRule\").CSSMediaRule,\n  CSSSupportsRule: require(\"./CSSSupportsRule\").CSSSupportsRule,\n  CSSStyleDeclaration: require(\"./CSSStyleDeclaration\").CSSStyleDeclaration,\n  CSSKeyframeRule: require('./CSSKeyframeRule').CSSKeyframeRule,\n  CSSKeyframesRule: require('./CSSKeyframesRule').CSSKeyframesRule\n}; ///CommonJS\n\n/**\n * Produces a deep copy of stylesheet â€” the instance variables of stylesheet are copied recursively.\n * @param {CSSStyleSheet|CSSOM.CSSStyleSheet} stylesheet\n * @nosideeffects\n * @return {CSSOM.CSSStyleSheet}\n */\n\nCSSOM.clone = function clone(stylesheet) {\n  var cloned = new CSSOM.CSSStyleSheet();\n  var rules = stylesheet.cssRules;\n\n  if (!rules) {\n    return cloned;\n  }\n\n  var RULE_TYPES = {\n    1: CSSOM.CSSStyleRule,\n    4: CSSOM.CSSMediaRule,\n    //3: CSSOM.CSSImportRule,\n    //5: CSSOM.CSSFontFaceRule,\n    //6: CSSOM.CSSPageRule,\n    8: CSSOM.CSSKeyframesRule,\n    9: CSSOM.CSSKeyframeRule,\n    12: CSSOM.CSSSupportsRule\n  };\n\n  for (var i = 0, rulesLength = rules.length; i < rulesLength; i++) {\n    var rule = rules[i];\n    var ruleClone = cloned.cssRules[i] = new RULE_TYPES[rule.type]();\n    var style = rule.style;\n\n    if (style) {\n      var styleClone = ruleClone.style = new CSSOM.CSSStyleDeclaration();\n\n      for (var j = 0, styleLength = style.length; j < styleLength; j++) {\n        var name = styleClone[j] = style[j];\n        styleClone[name] = style[name];\n        styleClone._importants[name] = style.getPropertyPriority(name);\n      }\n\n      styleClone.length = style.length;\n    }\n\n    if (rule.hasOwnProperty('keyText')) {\n      ruleClone.keyText = rule.keyText;\n    }\n\n    if (rule.hasOwnProperty('selectorText')) {\n      ruleClone.selectorText = rule.selectorText;\n    }\n\n    if (rule.hasOwnProperty('mediaText')) {\n      ruleClone.mediaText = rule.mediaText;\n    }\n\n    if (rule.hasOwnProperty('conditionText')) {\n      ruleClone.conditionText = rule.conditionText;\n    }\n\n    if (rule.hasOwnProperty('cssRules')) {\n      ruleClone.cssRules = clone(rule).cssRules;\n    }\n  }\n\n  return cloned;\n}; //.CommonJS\n\n\nexports.clone = CSSOM.clone; ///CommonJS","map":null,"metadata":{},"sourceType":"script"}