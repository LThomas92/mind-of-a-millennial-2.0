{"ast":null,"code":"\"use strict\"; // This files implements the calculation of the offset between the global monotonic clock and UNIX time. This value is\n// known as |t1| in the calculation of \"time origin timestamp\" in the spec. This value needs to be calculated once and\n// can be used in all subsequent Performance instances.\n//\n// However, if the clock is not fast enough, the export is undefined to signify that we should use Date.now() to get the\n// time origin timestamp with millisecond accuracy, per spec.\n\nvar _require = require(\"./global-monotonic-clock\"),\n    getGlobalMonotonicClockMS = _require.getGlobalMonotonicClockMS;\n\nvar clockIsAccurate = require(\"./clock-is-accurate\"); // This function assumes the clock is accurate.\n\n\nfunction calculateClockOffset() {\n  var start = Date.now();\n  var cur = start;\n\n  while (cur === start) {\n    cur = Date.now();\n  } // At this point |cur| \"just\" became equal to the next millisecond -- the unseen digits after |cur| are approximately\n  // all 0, and |cur| is the closest to the actual value of the UNIX time. Now, get the current global monotonic clock\n  // value and do the remaining calculations.\n\n\n  return cur - getGlobalMonotonicClockMS();\n}\n\nif (clockIsAccurate) {\n  // Warm up the function.\n  calculateClockOffset();\n  calculateClockOffset();\n  calculateClockOffset();\n  module.exports = calculateClockOffset;\n} else {\n  module.exports = undefined;\n}","map":null,"metadata":{},"sourceType":"script"}