{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _draftJs = require('draft-js');\n\nvar _model = require('../../model/');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // import './todo.scss';\n\n\nvar TodoBlock = function (_React$Component) {\n  _inherits(TodoBlock, _React$Component);\n\n  function TodoBlock(props) {\n    _classCallCheck(this, TodoBlock);\n\n    var _this = _possibleConstructorReturn(this, (TodoBlock.__proto__ || Object.getPrototypeOf(TodoBlock)).call(this, props));\n\n    _this.updateData = _this.updateData.bind(_this);\n    return _this;\n  }\n\n  _createClass(TodoBlock, [{\n    key: 'updateData',\n    value: function updateData() {\n      var _props = this.props,\n          block = _props.block,\n          blockProps = _props.blockProps;\n      var setEditorState = blockProps.setEditorState,\n          getEditorState = blockProps.getEditorState;\n      var data = block.getData();\n      var checked = data.has('checked') && data.get('checked') === true;\n      var newData = data.set('checked', !checked);\n      setEditorState((0, _model.updateDataOfBlock)(getEditorState(), block, newData));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var data = this.props.block.getData();\n      var checked = data.get('checked') === true;\n      return _react2.default.createElement('div', {\n        className: checked ? 'block-todo-completed' : ''\n      }, _react2.default.createElement('span', {\n        contentEditable: false\n      }, _react2.default.createElement('input', {\n        type: 'checkbox',\n        checked: checked,\n        onChange: this.updateData\n      })), _react2.default.createElement(_draftJs.EditorBlock, this.props));\n    }\n  }]);\n\n  return TodoBlock;\n}(_react2.default.Component);\n\nexports.default = TodoBlock;\nTodoBlock.propTypes = {\n  block: _propTypes2.default.object,\n  blockProps: _propTypes2.default.object\n};","map":null,"metadata":{},"sourceType":"script"}