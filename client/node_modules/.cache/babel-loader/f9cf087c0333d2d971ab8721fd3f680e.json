{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/Lawrence/Desktop/mind-of-a-millennial/client/node_modules/@babel/runtime/regenerator\");\n\nvar path = require(\"path\");\n\nvar whatwgURL = require(\"whatwg-url\");\n\nvar _require = require(\"./living/helpers/internal-constants\"),\n    domSymbolTree = _require.domSymbolTree;\n\nvar SYMBOL_TREE_POSITION = require(\"symbol-tree\").TreePosition;\n\nvar _require2 = require(\"./living/helpers/document-base-url\"),\n    parseURLToResultingURLRecord = _require2.parseURLToResultingURLRecord;\n\nexports.toFileUrl = function (fileName) {\n  // Beyond just the `path.resolve`, this is mostly for the benefit of Windows,\n  // where we need to convert \"\\\" to \"/\" and add an extra \"/\" prefix before the\n  // drive letter.\n  var pathname = path.resolve(process.cwd(), fileName).replace(/\\\\/g, \"/\");\n\n  if (pathname[0] !== \"/\") {\n    pathname = \"/\" + pathname;\n  } // path might contain spaces, so convert those to %20\n\n\n  return \"file://\" + encodeURI(pathname);\n};\n/**\n * Define a getter on an object\n *\n * This method replaces any existing getter but leaves setters in place.\n *\n * - `object` {Object} the object to define the getter on\n * - `property` {String} the name of the getter\n * - `getterFn` {Function} the getter\n */\n\n\nexports.defineGetter = function defineGetter(object, property, getterFn) {\n  var descriptor = Object.getOwnPropertyDescriptor(object, property) || {\n    configurable: true,\n    enumerable: true\n  };\n  descriptor.get = getterFn;\n  Object.defineProperty(object, property, descriptor);\n};\n/**\n * Define a set of properties on an object, by copying the property descriptors\n * from the original object.\n *\n * - `object` {Object} the target object\n * - `properties` {Object} the source from which to copy property descriptors\n */\n\n\nexports.define = function define(object, properties) {\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = Object.getOwnPropertyNames(properties)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var name = _step.value;\n      var propDesc = Object.getOwnPropertyDescriptor(properties, name);\n      Object.defineProperty(object, name, propDesc);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n};\n/**\n * Define a list of constants on a constructor and its .prototype\n *\n * - `Constructor` {Function} the constructor to define the constants on\n * - `propertyMap` {Object}  key/value map of properties to define\n */\n\n\nexports.addConstants = function addConstants(Constructor, propertyMap) {\n  for (var property in propertyMap) {\n    var value = propertyMap[property];\n    addConstant(Constructor, property, value);\n    addConstant(Constructor.prototype, property, value);\n  }\n};\n\nfunction addConstant(object, property, value) {\n  Object.defineProperty(object, property, {\n    configurable: false,\n    enumerable: true,\n    writable: false,\n    value: value\n  });\n}\n\nexports.mixin = function (target, source) {\n  var keys = Reflect.ownKeys(source);\n\n  for (var i = 0; i < keys.length; ++i) {\n    if (keys[i] in target) {\n      continue;\n    }\n\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nvar memoizeQueryTypeCounter = 0;\n/**\n * Returns a version of a method that memoizes specific types of calls on the object\n *\n * - `fn` {Function} the method to be memozied\n */\n\nexports.memoizeQuery = function memoizeQuery(fn) {\n  // Only memoize query functions with arity <= 2\n  if (fn.length > 2) {\n    return fn;\n  }\n\n  var type = memoizeQueryTypeCounter++;\n  return function () {\n    if (!this._memoizedQueries) {\n      return fn.apply(this, arguments);\n    }\n\n    if (!this._memoizedQueries[type]) {\n      this._memoizedQueries[type] = Object.create(null);\n    }\n\n    var key;\n\n    if (arguments.length === 1 && typeof arguments[0] === \"string\") {\n      key = arguments[0];\n    } else if (arguments.length === 2 && typeof arguments[0] === \"string\" && typeof arguments[1] === \"string\") {\n      key = arguments[0] + \"::\" + arguments[1];\n    } else {\n      return fn.apply(this, arguments);\n    }\n\n    if (!(key in this._memoizedQueries[type])) {\n      this._memoizedQueries[type][key] = fn.apply(this, arguments);\n    }\n\n    return this._memoizedQueries[type][key];\n  };\n};\n\nexports.reflectURLAttribute = function (elementImpl, contentAttributeName) {\n  var attributeValue = elementImpl.getAttribute(contentAttributeName);\n\n  if (attributeValue === null || attributeValue === \"\") {\n    return \"\";\n  }\n\n  var urlRecord = parseURLToResultingURLRecord(attributeValue, elementImpl._ownerDocument);\n\n  if (urlRecord === null) {\n    return attributeValue;\n  }\n\n  return whatwgURL.serializeURL(urlRecord);\n};\n\nfunction isValidAbsoluteURL(str) {\n  return whatwgURL.parseURL(str) !== null;\n}\n\nexports.isValidTargetOrigin = function (str) {\n  return str === \"*\" || str === \"/\" || isValidAbsoluteURL(str);\n};\n\nexports.simultaneousIterators =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee(first, second) {\n  var firstResult, secondResult;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          firstResult = first.next();\n          secondResult = second.next();\n\n          if (!(firstResult.done && secondResult.done)) {\n            _context.next = 4;\n            break;\n          }\n\n          return _context.abrupt(\"return\");\n\n        case 4:\n          _context.next = 6;\n          return [firstResult.done ? null : firstResult.value, secondResult.done ? null : secondResult.value];\n\n        case 6:\n          _context.next = 0;\n          break;\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n});\n\nexports.treeOrderSorter = function (a, b) {\n  var compare = domSymbolTree.compareTreePosition(a, b);\n\n  if (compare & SYMBOL_TREE_POSITION.PRECEDING) {\n    // b is preceding a\n    return 1;\n  }\n\n  if (compare & SYMBOL_TREE_POSITION.FOLLOWING) {\n    return -1;\n  } // disconnected or equal:\n\n\n  return 0;\n};\n/* eslint-disable global-require */\n\n\nexports.Canvas = null;\n[\"canvas\", \"canvas-prebuilt\"].some(function (moduleName) {\n  try {\n    exports.Canvas = require(moduleName);\n\n    if (typeof exports.Canvas !== \"function\") {\n      // In browserify, the require will succeed but return an empty object\n      exports.Canvas = null;\n    }\n  } catch (e) {\n    exports.Canvas = null;\n  }\n\n  return exports.Canvas !== null;\n});","map":null,"metadata":{},"sourceType":"script"}